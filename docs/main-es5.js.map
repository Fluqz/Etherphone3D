{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/axes-behaviours/axes-behaviour.ts","webpack:///src/app/axes-behaviours/frequency-shfit.ts","webpack:///src/app/axes-behaviours/octivator.ts","webpack:///src/app/axes-behaviours/volume-shift.ts","webpack:///src/app/beatmachine/beat-machine.component.ts","webpack:///src/app/beatmachine/beat-machine.ts","webpack:///src/app/beatmachine/track.component.ts","webpack:///src/app/color.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/data/frequency-of-notes.ts","webpack:///src/app/object-control.ts","webpack:///src/app/scene-manager.ts","webpack:///src/app/selected-menu/selected.component.ts","webpack:///src/app/selected-menu/selected.component.html","webpack:///src/app/storage.ts","webpack:///src/app/theremin/axis.ts","webpack:///src/app/theremin/note.ts","webpack:///src/app/theremin/note3D.ts","webpack:///src/app/theremin/theremin.component.ts","webpack:///src/app/theremin/theremin.ts","webpack:///src/app/theremin/theremin3D.ts","webpack:///src/app/tools/drag-window.ts","webpack:///src/app/tools/labels/axes-label.ts","webpack:///src/app/tools/labels/distance-label.ts","webpack:///src/app/tools/labels/memory-label.ts","webpack:///src/app/tools/tools.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","zone","UIHidden","dragWindow","container","document","querySelector","sm","window","setTimeout","theremin","serializeIn","load","toggleOnOff","theremin3D","objCtrl","loop","resizeEvent","onResize","bind","onresize","mouseDownEvent","onMouseDown","addEventListener","mouseUpEvent","onMouseUp","mouseMovevent","onMouseMove","keydownEvent","onkeydown","keyupEvent","onkeyup","update","runOutsideAngular","AFID","requestAnimationFrame","axis","target","getAttribute","setAttribute","type","activeCamera","ORTHOGRAPHIC","orthographic","position","set","PERSPECTIVE","orbitCamera","currentCamera","dragObj","console","log","key","resize","file","obj","JSON","parse","bpm","beats","noteDuration","samples","serializeOut","beatmachine","stringify","$event","ngOnDestroy","cancelAnimationFrame","save","selector","template","styleUrls","AppModule","declarations","imports","providers","bootstrap","AxesBehaviour","name","sF","min","max","muted","note","FrequencyShift","noteData","keydown","frequency","nearest","currentNote","data","forEach","Math","abs","round","snapToNote","Octivator","oscs","count","multipier","currentMultiplier","osc","stop","disconnect","neg","i","createOscillator","start","push","VolumeShift","volume","BeatMachineView","_samples","notes","ctrl","clearInterval","playTO","time","secondsPerBeat","pause","tracks","track","notes3D","array","duration","styles","read","BeatMachine","val","samplesInQueue","sample","splice","indexOf","isPlaying","startTime","currentTime","state","resume","scheduler","clearTimeout","TOID","nextNoteTime","beatNumber","scheduleTime","play","length","scheduleAhead","scheduleNote","nextNote","lookahead","_instance","TrackView","hostRef","host","nativeElement","doubleClickEvent","onDoubleClick","clickEvent","onClick","getUniqueID","add","remove","classList","contains","removeSample","rect","getBoundingClientRect","x","clientX","left","clientWidth","trunc","createSample","selectedObj","ele","sampleEle","closest","color","getHexString","Color","X","Y","Z","BG","Dashboard","selectedNote","unmute","mute","removeNote3D","deleteNote","_selectedNote","selected","NoteDataClass","ObjectControl","_theremin3D","keyMap","Map","mouseDown","mouse","ip","offset","moveTo","raycaster","plane","renderer","domElement","onTouchStart","onTouchEnd","onTouchCancel","onTouchMove","onKeyUp","onKeyDown","objs","event","w","y","clientY","h","vector","unproject","setFromCamera","intersects","intersectObjects","collectRaycastObjs","orbit","enabled","object","shiftKey","selectedObjs","getNoteByObj","unselect","setFromNormalAndCoplanarPoint","getWorldDirection","normal","ray","intersectPlane","copy","sub","select","includes","mouseUp","moveNote","toLowerCase","XKey","YKey","ZKey","get","_selectedObj","undefined","parent","CameraType","SceneManager","innerWidth","innerHeight","antialias","setSize","setClearColor","toneMapping","append","perspective","zoom","scene","background","createAxes","createLight","points","geometry","setFromPoints","material","z","hemi","setPath","render","pos","distanceTo","distanceToCenter","clientHeight","aspect","updateProjectionMatrix","setPixelRatio","camera","reset","dispose","enableDamping","dampingFactor","enableRotate","environmentObjs","Selected","wave","templateUrl","Storage","localStorage","getItem","baseName","setItem","Axis","Note","setHSL","random","gain","connect","masterVolume","_volume","setValueAtTime","getHex","setHex","_frequency","value","_wave","Note3D","userData","distanceLabel","memoryLabel","axesLabel","move","scale","ThereminView","axesBehaviours","b","cb","addNote","note3D","addNote3D","addOsc","toggleMemoryLabel","toggleDistanceLabel","toggleAxesLabel","Theremin","instance","toDestination","storedVolume","computePosition","behaviour","sn","destroy","_ses","_notes","n","compute1DPosition","processAlongDimension","_x","_y","_z","Theremin3D","note3Ds","computeFromPosition","DragWindow","_dragbarClassName","_dragElementClassName","top","dragbarClassName","dragElementClassName","xOffset","pageX","yOffset","pageY","style","width","height","overflow","AxesLine","p1","p2","lineGeo","AxesLabel","_note","_enabled","end","createLabel","setX","setY","setZ","visible","DistanceLabel","labels","sides","pairs","near","far","label","side","show","hide","DistanceLine","oLabel","index","pair","getLabelBySide","_side","_start","_end","direction","create","line","transparent","opacity","computeDirection","callback","distance","point","raycastObjs","updateLine","MemoryLabel","storedStart","sphere","Tools","uid","element","traverse","cleanMaterial","Object","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, AfterViewInit, OnDestroy, HostListener, NgZone } from '@angular/core';\r\n\r\nimport { Theremin } from './theremin/theremin';\r\nimport { SceneManager, CameraType } from './scene-manager';\r\nimport { Theremin3D } from './theremin/theremin3D';\r\nimport { ObjectControl } from './object-control';\r\nimport { DragWindow } from './tools/drag-window';\r\n\r\nimport { Storage } from './storage'\r\nimport { BeatMachine } from './beatmachine/beat-machine';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n\r\n    <div id=\"webGL\"></div>\r\n\r\n\r\n    <div *ngIf=\"true\" id=\"ui-wrapper\" (mouseenter)=\"mouseenterUI()\" (mouseleave)=\"mouseenterUI()\">\r\n\r\n      <div>\r\n\r\n        <div class=\"btn\" (click)=\"setCamera('perspective')\">P</div>\r\n\r\n        <div class=\"btn\" (click)=\"setCamera('orthographic')\">O</div>\r\n\r\n      </div>\r\n\r\n\r\n      <div id=\"obj-menu\" class=\"drag-window\">\r\n\r\n          <div class=\"drag-bar\"></div>\r\n\r\n          <theremin *ngIf=\"theremin && theremin3D\" [theremin]=\"theremin\" [theremin3D]=\"theremin3D\"></theremin>\r\n\r\n          <selected-menu *ngIf=\"theremin3D\" [theremin3D]=\"theremin3D\"></selected-menu>\r\n\r\n          <beatmachine *ngIf=\"theremin3D\" class=\"drag-window\" [theremin3D]=\"theremin3D\"></beatmachine>\r\n\r\n      </div>\r\n\r\n\r\n      <!--<mixer *ngIf=\"theremin3D\" class=\"drag-window\" [theremin3D]=\"theremin3D\"></mixer>-->\r\n\r\n      <dashboard *ngIf=\"theremin3D\" class=\"drag-window\" [theremin]=\"theremin\" [theremin3D]=\"theremin3D\"></dashboard>\r\n\r\n    </div>\r\n        \r\n  `,\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements AfterViewInit, OnDestroy{\r\n\r\n  private container: HTMLElement\r\n\r\n  public theremin: Theremin\r\n  public theremin3D: Theremin3D\r\n  public objCtrl: ObjectControl\r\n  public sm: SceneManager\r\n\r\n  private mouseDownEvent: any\r\n  private mouseUpEvent: any\r\n  private mouseMovevent: any\r\n  private keydownEvent: any\r\n  private keyupEvent: any\r\n  private resizeEvent: any\r\n\r\n  private dragWindow: DragWindow\r\n\r\n  public UIHidden: boolean = false\r\n\r\n  private AFID: number\r\n\r\n  constructor(public zone: NgZone) {\r\n\r\n    this.dragWindow = new DragWindow()\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n\r\n    this.container = document.querySelector('#webGL')\r\n\r\n    this.sm = new SceneManager(this.container)\r\n\r\n    window.setTimeout(()=>{\r\n\r\n      this.theremin = new Theremin()\r\n\r\n      this.serializeIn(Storage.load())\r\n      \r\n      this.theremin.toggleOnOff(false)\r\n\r\n      this.theremin3D = new Theremin3D(this.theremin)\r\n      this.objCtrl = new ObjectControl(this.theremin3D)\r\n\r\n\r\n      // this.theremin.toggleOnOff(false)\r\n\r\n\r\n      this.loop()\r\n    })\r\n\r\n\r\n\r\n\r\n    this.resizeEvent = this.onResize.bind(this)\r\n    window.onresize = this.resizeEvent\r\n\r\n    this.mouseDownEvent = this.onMouseDown.bind(this)\r\n    document.addEventListener('mousedown', this.mouseDownEvent, false)\r\n\r\n    this.mouseUpEvent = this.onMouseUp.bind(this)\r\n    document.addEventListener('mouseup', this.mouseUpEvent, false)\r\n    \r\n    this.mouseMovevent = this.onMouseMove.bind(this)\r\n    document.addEventListener('mousemove', this.mouseMovevent, false)\r\n\r\n    \r\n    this.keydownEvent = this.onkeydown.bind(this)\r\n    document.addEventListener('keydown', this.keydownEvent, false)\r\n\r\n    this.keyupEvent = this.onkeyup.bind(this)\r\n    document.addEventListener('keyup', this.keyupEvent, false)\r\n  }\r\n\r\n\r\n  // private fixedUpdateTiming: number = 20;\r\n  // private physicsTimeSimulated:number = Date.now();\r\n  // private _deltaTime: number = 0;\r\n  // private lastUpdate: number = Date.now();\r\n\r\n  public loop(): void {\r\n\r\n    // while(this.physicsTimeSimulated < Date.now()){\r\n\r\n    //   this.fixedUpdate()\r\n    //   this.physicsTimeSimulated += this.fixedUpdateTiming\r\n    // }\r\n\r\n    this.update()\r\n\r\n    // this._deltaTime = Date.now() - this.lastUpdate;\r\n    // this.lastUpdate = Date.now();\r\n\r\n    this.zone.runOutsideAngular(()=> {\r\n      this.AFID = window.requestAnimationFrame(this.loop.bind(this))\r\n    })\r\n  }\r\n\r\n  private update() {\r\n    // console.log('update')\r\n\r\n    this.theremin.update()\r\n    this.theremin3D.update()\r\n\r\n    this.sm.update()\r\n  }\r\n\r\n  private fixedUpdate() {\r\n    // console.log('fixed update')\r\n  }\r\n\r\n\r\n  public rotateCamera(e) {\r\n\r\n    let axis = e.target.getAttribute('axis')\r\n\r\n    if(axis == 'x') axis = 'y'\r\n    else if(axis == 'y') axis = 'z'\r\n    else if(axis == 'z') axis = 'x'\r\n\r\n    // this.rotateCamera(axis)\r\n\r\n    e.target.setAttribute('axis', axis)\r\n  }\r\n\r\n  public setCamera(type:string) {\r\n\r\n    if(type == 'orthographic') {\r\n      SceneManager.activeCamera = CameraType.ORTHOGRAPHIC\r\n      SceneManager.orthographic.position.set(0, 0, 2)\r\n    }\r\n    else if(type == 'perspective') \r\n      SceneManager.activeCamera = CameraType.PERSPECTIVE\r\n\r\n    SceneManager.orbitCamera = SceneManager.currentCamera\r\n  }\r\n\r\n\r\n  public mouseenterUI() {\r\n    \r\n    this.UIHidden = this.objCtrl.dragObj\r\n  }\r\n\r\n  public onMouseDown(e) {\r\n\r\n    this.dragWindow.onMouseDown(e)\r\n    \r\n  }\r\n\r\n  public onMouseMove(e) {\r\n    \r\n    this.dragWindow.onMouseMove(e)\r\n  }\r\n  \r\n  public onMouseUp(e) {\r\n    \r\n    this.dragWindow.onMouseUp(e)\r\n  }\r\n\r\n  \r\n  public onkeydown(e) {\r\n\r\n\r\n  }\r\n\r\n  \r\n  public onkeyup(e: KeyboardEvent) {\r\n\r\n    console.log(e)\r\n    if(e.key == ' ' && e.code == 'Space') {\r\n\r\n      this.theremin.toggleOnOff()\r\n    }\r\n    else if(e.key == 'p' && e.code == 'KeyP') {\r\n\r\n      this.theremin.toggleOnOff()\r\n    }\r\n  }\r\n\r\n\r\n  public onResize() {\r\n\r\n    this.sm.resize()\r\n  }\r\n\r\n\r\n\r\n  private serializeIn(file: string) {\r\n\r\n    let obj: {} = JSON.parse(file)\r\n\r\n    if(obj['theremin']) this.theremin.serializeIn(obj['theremin'])\r\n\r\n    if(obj['beatmachine']) {\r\n\r\n      BeatMachine.bpm = obj['beatmachine']['bpm']\r\n      BeatMachine.beats = obj['beatmachine']['beats']\r\n      BeatMachine.noteDuration = obj['beatmachine']['noteDuration']\r\n    }\r\n  }\r\n\r\n  private serializeOut() {\r\n\r\n    let samples: {}[] = []\r\n\r\n    let obj: {} = {\r\n      theremin: this.theremin.serializeOut(),\r\n      beatmachine: {\r\n        bpm: BeatMachine.bpm,\r\n        beats: BeatMachine.beats,\r\n        noteDuration: BeatMachine.noteDuration,\r\n      }\r\n    }\r\n\r\n    return JSON.stringify(obj)\r\n  }\r\n\r\n\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n\r\n    this.ngOnDestroy()\r\n  }\r\n    \r\n  ngOnDestroy() {\r\n\r\n    window.cancelAnimationFrame(this.AFID)\r\n\r\n    Storage.save(this.serializeOut())\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\nimport { Selected } from './selected-menu/selected.component'\nimport { TrackView } from './beatmachine/track.component'\nimport { Dashboard } from './dashboard/dashboard.component'\nimport { ThereminView } from './theremin/theremin.component'\nimport { BeatMachineView } from './beatmachine/beat-machine.component'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Selected,\n    TrackView,\n    Dashboard,\n    ThereminView,\n    BeatMachineView\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Vector3 } from 'three'\r\nimport { Axis } from '../theremin/axis'\r\nimport { Note } from '../theremin/note'\r\n\r\n\r\nexport class AxesBehaviour {\r\n\r\n    public name: string = ''\r\n\r\n    public sF: number = 10\r\n\r\n    public axis: Axis\r\n\r\n    public min: number = 0\r\n    public max: number = 1000\r\n\r\n    public muted: boolean = false\r\n\r\n    constructor(axis?: Axis) {\r\n\r\n        this.axis = axis\r\n    }\r\n\r\n    public compute1DPosition(note: Note) {}\r\n\r\n    public processAlongDimension(note: Note, position: Vector3) {}\r\n\r\n}","import { AxesBehaviour } from './axes-behaviour'\r\nimport { Note } from '../theremin/note'\r\nimport { NoteData, NoteDataClass } from \"../data/frequency-of-notes\"\r\nimport { Axis } from '../theremin/axis'\r\nimport { Vector3 } from 'three'\r\n\r\nexport class FrequencyShift extends AxesBehaviour {\r\n\r\n    noteData: NoteData[] = []\r\n\r\n    keydown:boolean = false\r\n\r\n    constructor(axis?: Axis) { \r\n        \r\n        super(axis)\r\n        \r\n        this.name = 'Frequency Shift'\r\n\r\n        this.sF = 10\r\n\r\n        this.min = 0\r\n        this.max = 2000\r\n\r\n        this.muted = false\r\n\r\n\r\n        window.addEventListener('keydown', this.onkeydown.bind(this))\r\n        window.addEventListener('keyup', this.onkeyup.bind(this))\r\n    }\r\n\r\n    private onkeydown(e: KeyboardEvent) {\r\n        if(e.key == 's') this.keydown = true\r\n    }\r\n    private onkeyup(e: KeyboardEvent) {\r\n        if(e.key == 's') this.keydown = false\r\n    }\r\n\r\n    public snapToNote(frequency: number) : number {\r\n\r\n        if(!this.keydown) return frequency\r\n\r\n        let nearest: number = 1000\r\n        let currentNote: NoteData\r\n\r\n        NoteDataClass.data.forEach(data => {\r\n\r\n            if(nearest > Math.abs(frequency - data.frequency)) {\r\n\r\n                nearest = Math.abs(frequency - data.frequency)\r\n\r\n                currentNote = data\r\n            }\r\n        })\r\n\r\n        return currentNote.frequency\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    public compute1DPosition(note: Note) {\r\n\r\n        note.position[this.axis] = note.frequency / this.sF\r\n    }\r\n\r\n    public processAlongDimension(note: Note, position: Vector3) {\r\n\r\n        if(this.axis == null) return\r\n        if(this.muted) return\r\n\r\n        let frequency = Math.round((position[this.axis] * this.sF) * 100) / 100\r\n\r\n        note.frequency = this.snapToNote(frequency)\r\n    }\r\n}","import { AxesBehaviour } from './axes-behaviour';\r\nimport { Note } from '../theremin/note';\r\nimport { Axis } from '../theremin/axis'\r\nimport * as Tone from 'tone'\r\nimport { Vector3 } from 'three';\r\n\r\nexport class Octivator extends AxesBehaviour {\r\n\r\n    private oscs: OscillatorNode[] = []\r\n\r\n    private currentMultiplier: number\r\n\r\n    constructor(axis?: Axis) { \r\n        \r\n        super(axis)\r\n        \r\n        this.name = 'Octivator'\r\n\r\n        this.sF = 10\r\n\r\n        this.min = 0\r\n        this.max = 100\r\n\r\n        this.muted = false\r\n    }\r\n\r\n\r\n\r\n    public compute1DPosition(note: Note) {\r\n\r\n    }\r\n\r\n    // Minus value go low, plus go high\r\n    public processAlongDimension(note: Note, position: Vector3) {\r\n\r\n\r\n        if(this.axis == null) return\r\n        if(this.muted) return\r\n\r\n        let count:number = Math.round(note.position[this.axis] / this.sF)\r\n        let multipier:number = count +1\r\n\r\n        count = Math.abs(count)\r\n\r\n        // if(this.currentMultiplier == multipier) return\r\n\r\n        this.currentMultiplier = multipier\r\n        \r\n        this.oscs.forEach(osc => {\r\n\r\n            osc.stop()\r\n            osc.disconnect()\r\n        })\r\n        this.oscs = []\r\n\r\n        let neg: boolean = false\r\n        if(multipier < 0) neg = true\r\n\r\n        for(let i = 1; i <= count; i++) {\r\n\r\n            let osc = Tone.context.createOscillator()\r\n            // osc.type = node.wave\r\n            // osc.type = 'sine'\r\n            // osc.connect(entity.gain)\r\n            // if(neg)\r\n            //     osc.frequency.setValueAtTime(entity.frequency / multipier, Tone.context.currentTime)\r\n            // else osc.frequency.setValueAtTime(multipier * entity.frequency, Tone.context.currentTime)\r\n\r\n            osc.start()\r\n\r\n            this.oscs.push(osc)\r\n        }\r\n    }\r\n\r\n    private createOctave(frequency: number) {\r\n\r\n\r\n\r\n    }\r\n}","import { AxesBehaviour } from './axes-behaviour';\r\nimport { Note } from '../theremin/note';\r\nimport { Axis } from '../theremin/axis'\r\nimport { Vector3 } from 'three';\r\n\r\nexport class VolumeShift extends AxesBehaviour {\r\n\r\n    constructor(axis?: Axis) { \r\n        \r\n        super(axis)\r\n        \r\n        this.name = 'Volume Shift'\r\n\r\n        this.sF = 100\r\n\r\n        this.min = 0\r\n        this.max = 100\r\n\r\n        this.muted = false\r\n    }\r\n\r\n\r\n\r\n    public compute1DPosition(note: Note) {\r\n\r\n        if(note instanceof Note) \r\n            note.position[this.axis] = note.volume * this.sF\r\n    }\r\n\r\n    public processAlongDimension(note: Note, position: Vector3) {\r\n\r\n        if(this.axis == null) return\r\n        if(this.muted) return\r\n        \r\n        note.volume = position[this.axis] / this.sF\r\n    }\r\n}","import { Component, AfterViewInit, Input, ViewChildren, OnDestroy, NgZone } from '@angular/core';\r\nimport { Theremin3D } from '../theremin/theremin3D';\r\nimport { BeatMachine } from './beat-machine';\r\nimport { Sample } from './sample';\r\nimport { TrackView } from './track.component';\r\n\r\n@Component({\r\n  selector: 'beatmachine', // TIMELINE NEEDS TO HAVE A BEAT MARKING LIKE A TAKT. MAYBE MAKE IT EXPANDABLE BUT BEGIN WITH 4/4 \r\n                        // INSIDE THE TIMELINE ARE ALL THE INSTRUMENTS IN THIS CASE THE SAMPLES WHICH ARE ALL THE NOTES OR CHORDS WITHOUT A PARENT\r\n                        // EACH INSTRUMENT HAS ITS OWN DRAW LINE\r\n  template: `  \r\n\r\n      \r\n    <div style=\"margin: 15px 0px;\">\r\n\r\n      <div *ngIf=\"theremin3D\" class=\"btn play\" (click)=\"play()\"></div>\r\n\r\n      <div *ngIf=\"theremin3D\" class=\"btn pause\" (click)=\"pause()\"></div>\r\n\r\n      <input type=\"number\" [value]=\"bpm\" (change)=\"bpm = $event.target.value\" />\r\n\r\n      <input type=\"number\" [value]=\"beats\" (change)=\"beats = $event.target.value\" />\r\n\r\n      <select name=\"noteDuration\" (change)=\"noteDuration = $event.target.value\">\r\n\r\n          <option value=\"1\">1</option>\r\n          <option value=\"1/2\">1/2</option>\r\n          <option value=\"1/4\">1/4</option>\r\n          <option value=\"1/8\">1/8</option>\r\n          <option value=\"1/16\">1/16</option>\r\n          <option value=\"1/32\">1/32</option>\r\n          <option value=\"1/64\">1/64</option>\r\n\r\n      </select>\r\n\r\n    </div>\r\n\r\n    \r\n\r\n    <div id=\"timeline-wrapper\">\r\n\r\n        <div id=\"timeline-pointer\" [style.left.%]=\"time\"></div>\r\n\r\n        <div id=\"timeline\">\r\n            <div *ngFor=\"let beat of beatsArray\" class=\"beat-marking\" [style.left.%]=\"beat*(100/beats)\"></div>\r\n        </div>\r\n        \r\n        <div id=\"tracks-wrapper\">\r\n          <track #tracks *ngFor=\"let note of notes\" [note]=\"note\" [beats]=\"beats\" class=\"track-timeline\" />\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n  `,\r\n  styles: [\r\n    `\r\n\r\n    :host {\r\n      \r\n      display:block;    \r\n      width: 100%;\r\n      height: auto;\r\n      padding: 20px;\r\n      color: #fefefe;\r\n  \r\n      resize: vertical;\r\n      overflow: auto;\r\n    }\r\n\r\n\r\n    #timeline-wrapper {\r\n\r\n      position: relative;\r\n      width: 80%;\r\n      height: 100%;\r\n      color: #000;\r\n    }\r\n\r\n    #timeline-pointer {\r\n      position:absolute;\r\n      top: 0px;\r\n      margin-left: 50px;\r\n\r\n      width: 1px;\r\n      height: 100%;\r\n      background-color: #000;\r\n    }\r\n\r\n    #timeline {\r\n      position: absolute;\r\n      top: -10px;\r\n      width: calc(100% - 50px);\r\n      height: 10px;\r\n      margin-left: 50px;\r\n      background-color: #FFaa00;\r\n    }\r\n\r\n\r\n    .beat-marking {\r\n      position: absolute;\r\n      top: 0px;\r\n      width: 1px;\r\n      height: 100%;\r\n      background-color: #000;\r\n    }\r\n\r\n    #tracks-wrapper {\r\n\r\n      overflow-x: hidden;\r\n      overflow-y: auto;\r\n      max-height: 150px;\r\n      height: 100%;\r\n      width: 100%\r\n    }\r\n\r\n\r\n    `\r\n  ],\r\n\r\n})\r\nexport class BeatMachineView implements AfterViewInit, OnDestroy {\r\n\r\n  @Input('theremin3D') theremin3D: Theremin3D\r\n  @ViewChildren('tracks', {read: TrackView}) private tracks: TrackView[]\r\n\r\n  public _samples: Sample[] = []\r\n\r\n  public time:number\r\n\r\n  constructor(private zone: NgZone) {\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    \r\n  }\r\n\r\n\r\n\r\n  private playTO:number\r\n  public play() {\r\n\r\n    //Theremin.togglePlay(false)\r\n\r\n    this.notes.forEach(note => {\r\n\r\n      note.ctrl.stop()\r\n    })\r\n    BeatMachine.stop()\r\n\r\n\r\n    // this.zone.runOutsideAngular(()=> {\r\n\r\n    //   this.playTO = window.setInterval(()=> { this.computeTime() }, 20)\r\n    // })\r\n\r\n    BeatMachine.start(this.samples)\r\n  }\r\n\r\n  public pause() {\r\n\r\n      BeatMachine.stop()\r\n\r\n      window.clearInterval(this.playTO)\r\n  }\r\n\r\n  // SAMPLE DOESNT KNOW ITS LENGTH OR SCHEDULE TIME ??\r\n  get samples() {\r\n\r\n    if(!this.tracks) return\r\n\r\n    this._samples = []\r\n\r\n    this.tracks.forEach(track => {\r\n\r\n        this._samples.push(...track.samples)\r\n    })\r\n\r\n    return this._samples\r\n  }\r\n\r\n  get notes() {\r\n\r\n    return this.theremin3D.notes3D\r\n  }\r\n\r\n  public computeTime() {\r\n\r\n    this.time = ((BeatMachine.time % (BeatMachine.secondsPerBeat * BeatMachine.beats)) / (BeatMachine.secondsPerBeat * BeatMachine.beats)) * 100\r\n    return this.time\r\n  }\r\n\r\n  // public get currentBeat() { return BeatMachine.currentNote }\r\n\r\n  public get bpm() { return BeatMachine.bpm }\r\n  public set bpm(bpm: number) {\r\n\r\n      BeatMachine.bpm = bpm\r\n  }\r\n\r\n  public get beats() { return BeatMachine.beats }\r\n  public set beats(beats: number) { BeatMachine.beats = beats }\r\n\r\n  public get beatsArray() { \r\n\r\n      let array:number[] = []\r\n\r\n      for(let i = 0; i < BeatMachine.beats; i++) array.push(i)\r\n\r\n      return array\r\n  }\r\n\r\n  public get noteDuration() { return BeatMachine.noteDuration }\r\n  public set noteDuration(duration:string) {\r\n\r\n    switch(duration) {\r\n      case '1':\r\n      case '1/2':\r\n      case '1/4':\r\n      case '1/8':\r\n      case '1/16':\r\n      case '1/32':\r\n      case '1/64':\r\n          BeatMachine.noteDuration = duration\r\n        break\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    this.pause()\r\n  }\r\n} ","import { Sample } from './sample'\r\nimport * as Tone from 'tone'\r\n\r\n\r\nexport class BeatMachine {\r\n\r\n    private static _instance: BeatMachine\r\n    public static bpm:number = 200\r\n    public static beats:number = 16\r\n    public static noteDuration:string = '1'\r\n\r\n    public static masterNode: GainNode\r\n\r\n    public static samplesInQueue: Sample[] = []\r\n\r\n    public static isPlaying: boolean = false\r\n\r\n    public static lookahead: number = 25 // MS\r\n    public static scheduleAhead: number = .1 // Seconds\r\n    \r\n    public static currentNote = 0 // 1/4 Note\r\n    public static nextNoteTime = 0 // 1/4 Note\r\n\r\n    public static secondsPerBeat: number = 0\r\n\r\n    public static startTime: number = 0\r\n\r\n    constructor() {\r\n        \r\n        // Tone.context = new AudioContext()\r\n\r\n        // BeatMachine.masterNode = Tone.context.createGain()\r\n\r\n        // BeatMachine.masterNode.gain.value = .3\r\n        // BeatMachine.masterNode.connect(Tone.context.destination)\r\n    }\r\n\r\n    public static get instance() {\r\n\r\n        if(BeatMachine._instance == null) BeatMachine._instance = new BeatMachine()\r\n\r\n        return BeatMachine._instance\r\n    }\r\n\r\n    public set setSamplesInQueue(val: Sample[]){\r\n\r\n        BeatMachine.samplesInQueue = val\r\n    }\r\n\r\n    public static get time() { return Tone.context.currentTime - BeatMachine.startTime }\r\n\r\n    public static add(sample: Sample) {\r\n\r\n        BeatMachine.samplesInQueue.push(sample)\r\n    }\r\n    \r\n    public static remove(sample: Sample) {\r\n\r\n        BeatMachine.samplesInQueue.splice(BeatMachine.samplesInQueue.indexOf(sample), 1)\r\n    }\r\n\r\n    public static start(samples?: Sample[]) {\r\n\r\n        if(samples != null) BeatMachine.samplesInQueue = samples\r\n\r\n        if(BeatMachine.isPlaying) BeatMachine.stop()\r\n\r\n        BeatMachine.isPlaying = true\r\n\r\n        BeatMachine.startTime = Tone.context.currentTime\r\n\r\n        // check if context is in suspended state (autoplay policy)\r\n        if (Tone.context.state === 'suspended') {\r\n            Tone.context.resume();\r\n        }\r\n\r\n        BeatMachine.scheduler(); // kick off scheduling\r\n    }\r\n\r\n    public static stop() {\r\n\r\n        BeatMachine.isPlaying = false\r\n\r\n        window.clearTimeout(BeatMachine.TOID)\r\n    }\r\n\r\n    private static nextNote() {\r\n\r\n        BeatMachine.secondsPerBeat = 60 / BeatMachine.bpm\r\n\r\n        BeatMachine.nextNoteTime += BeatMachine.secondsPerBeat\r\n\r\n        BeatMachine.currentNote += 1\r\n        if(BeatMachine.currentNote == BeatMachine.beats)\r\n            BeatMachine.currentNote = 0\r\n    }\r\n    \r\n    private static scheduleNote(beatNumber: number, time: number) {\r\n\r\n        // console.log(beatNumber, time)\r\n\r\n        BeatMachine.samplesInQueue.forEach(sample => {\r\n\r\n            if(sample.scheduleTime == beatNumber) {\r\n\r\n                // console.log('play', sample.scheduleTime, sample.length * BeatMachine.secondsPerBeat)\r\n\r\n                sample.note.play(sample.length * BeatMachine.secondsPerBeat)\r\n                sample.note.ctrl.play(sample.length * BeatMachine.secondsPerBeat)\r\n            }\r\n        })\r\n    }\r\n\r\n    static TOID: number\r\n    public static scheduler() {\r\n        \r\n        while(BeatMachine.nextNoteTime < BeatMachine.time + BeatMachine.scheduleAhead) {\r\n\r\n            BeatMachine.scheduleNote(BeatMachine.currentNote, BeatMachine.nextNoteTime)\r\n            BeatMachine.nextNote()\r\n            // console.log(BeatMachine.currentNote)\r\n        }\r\n\r\n        BeatMachine.TOID = window.setTimeout(BeatMachine.scheduler, BeatMachine.lookahead)\r\n    }\r\n}","import { Component, AfterViewInit, OnDestroy, Input, ElementRef } from '@angular/core';\r\n\r\nimport * as THREE from 'three'\r\nimport { ObjectControl } from '../object-control';\r\nimport { Theremin3D } from '../theremin/theremin3D';\r\nimport { Sample } from './sample';\r\nimport { BeatMachine } from './beat-machine';\r\nimport { Note3D } from '../theremin/note3D';\r\nimport { Tools } from '../tools/tools';\r\n\r\n@Component({\r\n  selector: 'track',\r\n  template: `\r\n  \r\n    <div class=\"note-title\" [style.backgroundColor]=\"color\">{{ note.ctrl.type }}</div>\r\n\r\n    <div class=\"creation-click-zone\">\r\n\r\n        <div *ngFor=\"let sample of samples\" \r\n          class=\"sample\" \r\n          data-id=\"{{sample.id}}\" \r\n          [style.background-color]=\"color\" \r\n          [style.left.%]=\"sample.scheduleTime * (100/beats)\" \r\n          [style.width.%]=\"100 / beats\">\r\n\r\n            <div class=\"sample-start\" (mousedown)=\"sampleMouseDown($event, sample)\" (mousemove)=\"sampleMouseMove($event, sample)\" (mouseup)=\"sampleMouseUp($event, sample)\"></div>\r\n            <div class=\"sample-end\" (mousedown)=\"sampleMouseDown($event, sample)\" (mousemove)=\"sampleMouseMove($event, sample)\" (mouseup)=\"sampleMouseUp($event, sample)\"></div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n  `,\r\n  styles: [\r\n\r\n      `\r\n      \r\n    :host {\r\n\r\n      display:block;\r\n      width: 100%;\r\n      height: 20px;\r\n      line-height: 20px;\r\n      background-color: #ddd;\r\n      color: #000;\r\n      border-bottom: 1px solid #FFaa00;\r\n      padding: 0px;\r\n      margin: 0px;\r\n    }\r\n    :host:last-child() {\r\n        border-bottom: none;\r\n    }\r\n\r\n    .note-title {\r\n        display: inline-block;\r\n        width: 50px;\r\n        height: 100%;\r\n        line-height: inherit;\r\n        padding: 0px 3px;\r\n        border-right: 1px solid #3f3f3f;\r\n        vertical-align: top;\r\n    }\r\n\r\n    .creation-click-zone {\r\n      position: relative;\r\n      display: inline-block;\r\n\r\n      width: calc(100% - 50px);\r\n      height: 100%;\r\n      vertical-align: top;\r\n\r\n    }\r\n\r\n    .sample {\r\n      position: absolute;\r\n      top: 10%;\r\n      left: 0px;\r\n\r\n      width: 10px;\r\n      height: 80%;\r\n      background-color: #00DDAA;\r\n      \r\n    }\r\n\r\n    .sample-start,\r\n    .sample-end {\r\n      position:absolute;\r\n      top:0px;\r\n      width: 4px;\r\n      height:100%;\r\n      display: inline-block;\r\n      cursor: col-resize;\r\n    }\r\n    .sample-start{\r\n      left: 0px;\r\n    }\r\n    .sample-end {\r\n      right: 0px;\r\n    }\r\n    .sample-start:hover,\r\n    .sample-end:hover {\r\n      background-color:#458459;\r\n    }\r\n      `\r\n  ]\r\n  \r\n})\r\nexport class TrackView implements AfterViewInit{\r\n\r\n  // @Input('objCtrl') objCtrl: ObjectControl \r\n  // @Input('theremin3D') theremin3D: Theremin3D\r\n  @Input('note') public note: Note3D\r\n\r\n  @Input('beats') public beats: number\r\n\r\n  // public set samples(val: Sample[]) {}\r\n  // public activeSample: Sample\r\n\r\n  public samples: Sample[] = []\r\n\r\n  private selectedSample: Sample\r\n\r\n  private host: HTMLElement\r\n\r\n  private doubleClickEvent: any\r\n  private clickEvent: any\r\n\r\n\r\n\r\n  constructor(private hostRef:ElementRef) {\r\n\r\n    this.host = this.hostRef.nativeElement\r\n\r\n  }\r\n\r\n  get color() {\r\n\r\n    return '#' + this.note.ctrl.color.getHexString()\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n\r\n    console.log('track note', this.note)\r\n\r\n    this.doubleClickEvent = this.onDoubleClick.bind(this)\r\n    this.host.addEventListener('dblclick', this.doubleClickEvent, false)\r\n\r\n    this.clickEvent = this.onClick.bind(this)\r\n    this.host.addEventListener('click', this.clickEvent, false)\r\n  }\r\n\r\n\r\n  public createSample(length: number, scheduleTime: number) {\r\n\r\n    let sample: Sample = {\r\n      id: Tools.getUniqueID(),\r\n      note: this.note,\r\n      scheduleTime: scheduleTime,\r\n      length: 1\r\n    }\r\n    console.log('sample', sample)\r\n    this.samples.push(sample)\r\n\r\n    BeatMachine.add(sample)\r\n\r\n    return sample\r\n  }\r\n  \r\n\r\n  public removeSample(sample: Sample) {\r\n\r\n    BeatMachine.remove(sample)\r\n\r\n    let i = this.samples.indexOf(sample)\r\n    return this.samples.splice(i, 1)\r\n  }\r\n\r\n  \r\n  private onDoubleClick(e) {\r\n\r\n    // Remove Sample on dblclick directly on sample\r\n    if(e.target.classList.contains('sample')) {\r\n\r\n      let id = e.target.getAttribute('id')\r\n\r\n      this.samples.forEach(sample => {\r\n\r\n        if(id == sample.id) \r\n          this.removeSample(sample)\r\n\r\n      })\r\n      \r\n    }\r\n    else if(e.target.classList.contains('creation-click-zone')) { // Create sample\r\n\r\n      let rect = e.target.getBoundingClientRect()\r\n\r\n      // Cutting to beat begin\r\n      let x = e.clientX - rect.left\r\n      let scheduleTime = (x / e.target.clientWidth) * 100\r\n      scheduleTime /= 100 / this.beats\r\n      scheduleTime = Math.trunc(scheduleTime)\r\n\r\n      this.createSample(BeatMachine.nextNoteTime, scheduleTime)\r\n    }\r\n  }\r\n\r\n  private onClick(e) {\r\n\r\n    ObjectControl.selectedObj = this.note.obj\r\n  }\r\n\r\n\r\n  private dragStartX:number\r\n  public sampleMouseDown(e, sample: Sample) {\r\n    \r\n    let ele: HTMLElement = e.target\r\n\r\n    let sampleEle = ele.closest('.sample')\r\n  }\r\n  \r\n  public sampleMouseUp(e, sample: Sample) {\r\n    \r\n  }\r\n  \r\n  public sampleMouseMove(e, sample: Sample) {\r\n    \r\n  }\r\n} ","\r\n\r\n\r\nexport class Color {\r\n\r\n    public static X: number = 0xFFFFFF\r\n    public static Y: number = 0xFFFFFF\r\n    public static Z: number = 0xFFFFFF\r\n\r\n    public static BG: number = 0x020202\r\n\r\n\r\n\r\n\r\n\r\n}","import { Component, AfterViewInit, ElementRef, Input } from '@angular/core';\r\nimport { ObjectControl } from '../object-control';\r\nimport { Theremin3D } from '../theremin/theremin3D';\r\nimport { Note3D } from '../theremin/note3D';\r\nimport { Note } from '../theremin/note';\r\nimport { Theremin } from '../theremin/theremin';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'dashboard',\r\n  template: `\r\n    \r\n  <div class=\"drag-bar\">DASHBOARD</div>\r\n\r\n  <div class=\"dashboard-cont\">\r\n\r\n      <div *ngFor=\"let note of notes\">\r\n\r\n          <div *ngIf=\"isNote(note)\" [id]=\"note.ctrl.id\" (click)=\"selectNote($event, note)\" class=\"dashboard-item\" [class.active]=\"selectedNote == note\">\r\n              Note\r\n              <div  class=\"dashboard-item-inner\">{{note.ctrl.id}}</div>\r\n              <div class=\"btn mute\" (click)=\"toggleMute(note)\">M</div>\r\n              <div class=\"btn delete\" (click)=\"delete(note)\">X</div>\r\n              \r\n          </div>\r\n          \r\n      </div>\r\n      \r\n  </div>\r\n  \r\n  \r\n  `,\r\n  styles: [\r\n      `\r\n      \r\n    :host {\r\n\r\n        position: absolute;\r\n        right: 0px;\r\n        top: 0px;\r\n    \r\n        width: 200px;\r\n        color: #fefefe;\r\n    }\r\n      \r\n    .dashboard-cont {\r\n\r\n        width: 100%;\r\n        height: auto;\r\n\r\n        max-height: 150px;\r\n\r\n        overflow-y: auto;\r\n\r\n        padding: 5px;\r\n    }\r\n\r\n    .dashboard-item {\r\n\r\n      width: 100%;\r\n      height: 30px;\r\n    }\r\n\r\n    .dashboard-item.active {\r\n      background-color: #3f3f3f;\r\n    }\r\n\r\n      ` \r\n  ]\r\n})\r\nexport class Dashboard implements AfterViewInit{\r\n\r\n  @Input('theremin') public theremin: Theremin\r\n  @Input('theremin3D') public theremin3D: Theremin3D\r\n\r\n  private host: HTMLElement\r\n\r\n  private _selectedNote: Note3D\r\n  public set selectedNote(val: Note3D) {\r\n\r\n    this._selectedNote = val\r\n    ObjectControl.selectedObj = val.obj\r\n  }\r\n  public get selectedNote() {\r\n\r\n    if(ObjectControl.selected != null) return ObjectControl.selected \r\n\r\n    return this._selectedNote = null\r\n  }\r\n\r\n  public get notes() { return this.theremin3D.notes3D }\r\n\r\n  constructor(private hostRef:ElementRef) {\r\n\r\n    this.host = this.hostRef.nativeElement\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n\r\n  public selectNote(e, note: Note3D) {\r\n\r\n    this.selectedNote = note\r\n  }\r\n\r\n  public toggleMute(note: Note3D) {\r\n\r\n    if(note.ctrl.muted) note.ctrl.unmute()\r\n    else note.ctrl.mute()\r\n  }\r\n\r\n  public delete(note: Note3D) {\r\n\r\n    this.theremin3D.removeNote3D(note)\r\n\r\n    this.theremin.deleteNote(note.ctrl)\r\n  }\r\n\r\n  public isNote(note: Note3D) { return note instanceof Note3D }\r\n}  ","\r\nexport interface NoteData {\r\n    note: string,\r\n    frequency: number,\r\n}\r\n\r\nexport class NoteDataClass {  // STRUCTURE DIFFERENT KEYS (ALL OF A or so)\r\n\r\n    public static data: NoteData[] = [\r\n\r\n        { note: 'C0', frequency: 16.35\t},\r\n        { note: 'C#0/Db0', frequency: 17.32 },\r\n        { note: 'D0', frequency: 18.35 },\r\n        { note: 'D#0/Eb0', frequency: 19.45 },\r\n        { note: 'E0', frequency: 20.60 },\r\n        { note: 'F0', frequency: 21.83 },\r\n        { note: 'F#0/Gb0', frequency: 23.12\t},\r\n        { note: 'G0', frequency: 24.50 },\r\n        { note: 'G#0/Ab0', frequency: 25.96 },\r\n        { note: 'A0', frequency: 27.50 },\r\n        { note: 'A#0/Bb0', frequency: 29.14 },\r\n        { note: 'B0', frequency: 30.87 },\r\n        { note: 'C1', frequency: 32.70 },\r\n        { note: 'C#1/Db1', frequency: 34.65 },\r\n        { note: 'D1', frequency: 36.71 },\r\n        { note: 'D#1/Eb1', frequency: 38.89 },\r\n        { note: 'E1', frequency: 41.20 },\r\n        { note: 'F1', frequency: 43.65 },\r\n        { note: 'F#1/Gb1', frequency: 46.25 },\r\n        { note: 'G1', frequency: 49.00 },\r\n        { note: 'G#1/Ab1', frequency: 51.91 },\r\n        { note: 'A1', frequency: 55.00 },\r\n        { note: 'A#1/Bb1', frequency: 58.27 },\r\n        { note: 'B1', frequency: 61.74 }, \r\n        { note: 'C2', frequency: 65.41 },\r\n        { note: 'C#2/Db2', frequency: 69.30\t},\r\n        { note: 'D2', frequency: 73.42 },\r\n        { note: 'D#2/Eb2', frequency: 77.78\t},\r\n        { note: 'E2', frequency: 82.41 },\r\n        { note: 'F2', frequency: 87.31 },\r\n        { note: 'F#2/Gb2', frequency: 92.50\t},\r\n        { note: 'G2', frequency: 98.00 },\r\n        { note: 'G#2/Ab2', frequency: 103.83 },\r\n        { note: 'A2', frequency: 110.00 },\r\n        { note: 'A#2/Bb2', frequency: 116.54 },\r\n        { note: 'B2', frequency: 123.47 },\r\n        { note: 'C3', frequency: 130.81 },\r\n        { note: 'C#3/Db3', frequency: 138.59 },\r\n        { note: 'D3', frequency: 146.83 },\r\n        { note: 'D#3/Eb3', frequency: 155.56 },\r\n        { note: 'E3', frequency: 164.81 },\r\n        { note: 'F3', frequency: 174.61 },\r\n        { note: 'F#3/Gb3', frequency: 185.00 },\r\n        { note: 'G3', frequency: 196.00 },\r\n        { note: 'G#3/Ab3', frequency: 207.65 },\r\n        { note: 'A3', frequency: 220.00 },\r\n        { note: 'A#3/Bb3', frequency: 233.08 },\r\n        { note: 'B3', frequency: 246.94 },\r\n        { note: 'C4', frequency: 261.63 },\r\n        { note: 'C#4/Db4', frequency: 277.18 },\r\n        { note: 'D4', frequency: 293.66 },\r\n        { note: 'D#4/Eb4', frequency: 311.13 },\r\n        { note: 'E4', frequency: 329.63 },\r\n        { note: 'F4', frequency: 349.23 },\r\n        { note: 'F#4/Gb4', frequency: 369.99 },\r\n        { note: 'G4', frequency: 392.00 },\r\n        { note: 'G#4/Ab4', frequency: 415.30 },\r\n        { note: 'A4', frequency: 440.00 },\r\n        { note: 'A#4/Bb4', frequency: 466.16 },\r\n        { note: 'B4', frequency: 493.88 },\r\n        { note: 'C5', frequency: 523.25 },\r\n        { note: 'C#5/Db5', frequency: 554.37 },\r\n        { note: 'D5', frequency: 587.33 },\r\n        { note: 'D#5/Eb5', frequency: 622.25 },\r\n        { note: 'E5', frequency: 659.25 },\r\n        { note: 'F5', frequency: 698.46 },\r\n        { note: 'F#5/Gb5', frequency: 739.99 },\r\n        { note: 'G5', frequency: 783.99 },\r\n        { note: 'G#5/Ab5', frequency: 830.61 },\r\n        { note: 'A5', frequency: 880.00 },\r\n        { note: 'A#5/Bb5', frequency: 932.33 },\r\n        { note: 'B5', frequency: 987.77 },\r\n        { note: 'C6', frequency: 1046.50 },\r\n        { note: 'C#6/Db6', frequency: 1108.73 },\r\n        { note: 'D6', frequency: 1174.66 },\r\n        { note: 'D#6/Eb6', frequency: 1244.51 },\r\n        { note: 'E6', frequency: 1318.51 },\r\n        { note: 'F6', frequency: 1396.91 },\r\n        { note: 'F#6/Gb6', frequency: 1479.98 },\r\n        { note: 'G6', frequency: 1567.98 },\r\n        { note: 'G#6/Ab6', frequency: 1661.22 },\r\n        { note: 'A6', frequency: 1760.00 },\r\n        { note: 'A#6/Bb6', frequency: 1864.66 },\r\n        { note: 'B6', frequency: 1975.53 },\r\n        { note: 'C7', frequency: 2093.00 },\r\n        { note: 'C#7/Db7', frequency: 2217.46 },\r\n        { note: 'D7', frequency: 2349.32 },\r\n        { note: 'D#7/Eb7', frequency: 2489.02 },\r\n        { note: 'E7', frequency: 2637.02 },\r\n        { note: 'F7', frequency: 2793.83 },\r\n        { note: 'F#7/Gb7', frequency: 2959.96 },\r\n        { note: 'G7', frequency: 3135.96 },\r\n        { note: 'G#7/Ab7', frequency: 3322.44 },\r\n        { note: 'A7', frequency: 3520.00 },\r\n        { note: 'A#7/Bb7', frequency: 3729.31 },\r\n        { note: 'B7', frequency: 3951.07 },\r\n        { note: 'C8', frequency: 4186.01 },\r\n        { note: 'C#8/Db8', frequency: 4434.92 },\r\n        { note: 'D8', frequency: 4698.63 },\r\n        { note: 'D#8/Eb8', frequency: 4978.03 },\r\n        { note: 'E8', frequency: 5274.04 },\r\n        { note: 'F8', frequency: 5587.65 },\r\n        { note: 'F#8/Gb8', frequency: 5919.91 },\r\n        { note: 'G8', frequency: 6271.93 },\r\n        { note: 'G#8/Ab8', frequency: 6644.88 },\r\n        { note: 'A8', frequency: 7040.00 },\r\n        { note: 'A#8/Bb8', frequency: 7458.62 },\r\n        { note: 'B8', frequency: 7902.13 },\r\n    ]\r\n}","import { Raycaster, Vector3, Object3D, Plane, Ray, Intersection, MOUSE, PerspectiveCamera, OrthographicCamera, Scene } from 'three'\r\nimport { Theremin3D } from './theremin/theremin3D'\r\nimport { SceneManager } from './scene-manager'\r\nimport { Note3D } from './theremin/note3D'\r\nimport { Theremin } from './theremin/theremin'\r\n\r\nexport class ObjectControl {\r\n\r\n    private static theremin3D: Theremin3D\r\n\r\n    public static selectedObjs: Object3D[] = []\r\n    public static selected: Note3D\r\n    public static _selectedObj: Object3D\r\n\r\n    private mouseDown: boolean\r\n    public dragObj: boolean = false\r\n    private mouse: Vector3\r\n\r\n    private raycaster: Raycaster\r\n    private ip: Vector3\r\n    private offset: Vector3\r\n    private moveTo: Vector3\r\n    private plane: Plane\r\n\r\n    private keyMap: Map<string, boolean> = new Map()\r\n    private XKey: boolean\r\n    private YKey: boolean\r\n    private ZKey: boolean\r\n    \r\n    constructor(_theremin3D: Theremin3D) {\r\n\r\n        ObjectControl.theremin3D = _theremin3D\r\n\r\n        this.mouseDown = false\r\n        this.mouse = new Vector3()\r\n        this.ip = new Vector3()\r\n        this.offset = new Vector3()\r\n        this.moveTo = new Vector3()\r\n        this.raycaster = new Raycaster()\r\n        \r\n        this.plane = new Plane(new Vector3(0, 1, 0), 0)\r\n\r\n        SceneManager.renderer.domElement.addEventListener('mousedown', this.onMouseDown.bind(this), false)\r\n        SceneManager.renderer.domElement.addEventListener('mouseup', this.onMouseUp.bind(this), false)\r\n        SceneManager.renderer.domElement.addEventListener('mousemove', this.onMouseMove.bind(this), false)\r\n\r\n        // document.addEventListener('mouseleave', this.onLeaveContainer.bind(this), false)\r\n\r\n        SceneManager.renderer.domElement.addEventListener('touchstart', this.onTouchStart.bind(this), false)\r\n        SceneManager.renderer.domElement.addEventListener('touchend', this.onTouchEnd.bind(this), false)\r\n        SceneManager.renderer.domElement.addEventListener('touchcancel', this.onTouchCancel.bind(this), false)\r\n        SceneManager.renderer.domElement.addEventListener('touchmove', this.onTouchMove.bind(this), false)\r\n        \r\n        SceneManager.renderer.domElement.addEventListener('keyup', this.onKeyUp.bind(this), false)\r\n        SceneManager.renderer.domElement.addEventListener('keydown', this.onKeyDown.bind(this), false)\r\n    }\r\n\r\n\r\n    public static get selectedObj() { return ObjectControl._selectedObj }\r\n    public static set selectedObj(obj: Object3D) {\r\n\r\n        if(obj != null && obj != undefined) {\r\n\r\n            if(ObjectControl._selectedObj != obj && ObjectControl.selected) {\r\n\r\n                ObjectControl.selected.unselect()\r\n            }\r\n\r\n            ObjectControl._selectedObj = obj\r\n\r\n            switch(obj.name) {\r\n\r\n                case 'osc.3D':\r\n                case 'chord.3D':\r\n\r\n                    ObjectControl.selected = ObjectControl.theremin3D.getNoteByObj(obj)\r\n\r\n                    break\r\n\r\n                default:\r\n\r\n                    if(obj.parent instanceof Scene) {\r\n\r\n                        ObjectControl.selectedObj = null\r\n                    }\r\n                    else {\r\n                        \r\n                        ObjectControl.selectedObj = obj.parent\r\n\r\n                        return\r\n                    } \r\n            }\r\n\r\n            if(ObjectControl.selected) \r\n                ObjectControl.selected.select()\r\n            else ObjectControl._selectedObj = null\r\n        }\r\n        else {\r\n\r\n            if(ObjectControl.selected != null && ObjectControl.selected != undefined) {\r\n\r\n                ObjectControl.selected.unselect()\r\n                ObjectControl.selected = null\r\n            }\r\n\r\n            ObjectControl._selectedObj = null\r\n        }\r\n    }\r\n\r\n\r\n    private collectRaycastObjs() {\r\n        \r\n        let objs: Object3D[] = []\r\n        ObjectControl.theremin3D.notes3D.forEach(note => {\r\n\r\n            objs.push(note.obj)\r\n        })\r\n\r\n        return objs\r\n    }\r\n\r\n    // ON KEY DOWN SWITCH NOTE/CHORD TO OLD POSITION WHEN CLICKED\r\n    // ON KEY UP SWITCH BACK TO CURRENT POSITION\r\n\r\n\r\n    // EVENTS\r\n    public onMouseDown(event) {\r\n        // console.log(event)\r\n        this.mouseDown = true\r\n\r\n        this.mouse.x = (event.clientX / SceneManager.w) * 2 - 1\r\n        this.mouse.y = -(event.clientY / SceneManager.h) * 2 + 1\r\n        \r\n        let vector = new Vector3(this.mouse.x, this.mouse.y, .5)\r\n        vector.unproject(SceneManager.currentCamera)\r\n\r\n        this.raycaster.setFromCamera(this.mouse, SceneManager.currentCamera)\r\n\r\n        let intersects = this.raycaster.intersectObjects(this.collectRaycastObjs(), true)\r\n\r\n        if(intersects.length > 0) {\r\n\r\n            SceneManager.orbit.enabled = false\r\n\r\n            if(intersects[0].object) {\r\n\r\n                ObjectControl.selectedObj = intersects[0].object\r\n\r\n                if(ObjectControl.selected) {\r\n\r\n                    this.dragObj = true\r\n\r\n                    // If no shift key\r\n                    if(!event.shiftKey) {\r\n\r\n                        ObjectControl.selectedObjs.forEach(obj => { ObjectControl.theremin3D.getNoteByObj(obj).unselect() })\r\n                        ObjectControl.selectedObjs = []\r\n                        ObjectControl.selectedObjs.push(intersects[0].object)\r\n                        // console.log(intersects[0].object,this.theremin3D.getNoteByObj(intersects[0].object))\r\n    \r\n                        // console.log('no shift', this.selected)\r\n                        this.plane.setFromNormalAndCoplanarPoint(SceneManager.currentCamera.getWorldDirection(this.plane.normal) , intersects[0].object.position)\r\n\r\n                        this.raycaster.ray.intersectPlane(this.plane, this.ip)\r\n\r\n                        this.offset.copy(this.ip.sub(intersects[0].object.position))\r\n                        // init move so its not at (0, 0, 0)\r\n                        this.moveTo.copy(intersects[0].object.position)\r\n\r\n                        ObjectControl.selected.select()\r\n                    }\r\n                    else if(!ObjectControl.selectedObjs.includes(intersects[0].object)) {\r\n    \r\n                        ObjectControl.selectedObj = intersects[0].object\r\n    \r\n                        ObjectControl.selectedObjs.push(intersects[0].object)\r\n\r\n                        // Select all selected objs\r\n                        ObjectControl.selectedObjs.forEach(obj => { \r\n                             \r\n                            ObjectControl.theremin3D.getNoteByObj(obj).select()\r\n                        })\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    ObjectControl.selectedObjs = []\r\n                }\r\n            }\r\n            else {\r\n                ObjectControl.selectedObjs = []\r\n                ObjectControl.selectedObj = null\r\n            }\r\n        }\r\n        else {\r\n            ObjectControl.selectedObjs = []\r\n            ObjectControl.selectedObj = null\r\n        }\r\n\r\n        // SceneSetup.instance.onMouseDown(event)\r\n        console.log('CURRENTLY SELECTED: ', ObjectControl.selectedObjs, '  Main: ', ObjectControl.selected)\r\n    }\r\n\r\n\r\n    public onMouseUp(event) {\r\n        \r\n        this.mouseDown = false\r\n\r\n        this.dragObj = false\r\n\r\n        SceneManager.orbit.enabled = true\r\n\r\n        if(!event.shiftKey) {\r\n\r\n            // this.selected = null\r\n            // this.selectedObjs = []\r\n        }\r\n\r\n        if(ObjectControl.selected) {\r\n\r\n            ObjectControl.selected.mouseUp()\r\n        }\r\n\r\n        if(ObjectControl.selectedObjs.length > 1) {\r\n\r\n        }\r\n\r\n        // SceneSetup.instance.onMouseUp(event)\r\n        \r\n    }\r\n\r\n    public onMouseMove(event) {\r\n        // event.preventDefault()\r\n\r\n        this.mouse.x = (event.clientX / SceneManager.w) * 2 - 1\r\n        this.mouse.y = -(event.clientY / SceneManager.h) * 2 + 1\r\n\r\n        this.raycaster.setFromCamera(this.mouse, SceneManager.currentCamera)\r\n\r\n        if(this.mouseDown) {\r\n            \r\n            // When selected calc position\r\n            if (ObjectControl.selectedObjs.length == 1 && ObjectControl.selected) { // MULTIPLE? WHY length = 1\r\n\r\n                // HIDE MENU\r\n\r\n                this.raycaster.ray.intersectPlane(this.plane, this.ip)\r\n\r\n                this.moveTo.copy(this.ip.sub(this.offset))\r\n\r\n                // if(this.XKey) this.moveTo.x = this.moveTo.x\r\n                // if(Y || Y == undefined) tmpPos.y = (moveTo.y)\r\n                // if(Z || Z == undefined) tmpPos.z = (moveTo.z)\r\n\r\n                // Move SELECTED\r\n                Theremin3D.moveNote(ObjectControl.selected, this.moveTo)\r\n            }\r\n        }\r\n        else {\r\n\r\n            // HOVER OBJ\r\n            let intersects = this.raycaster.intersectObjects(ObjectControl.theremin3D.objs, true)\r\n    \r\n            if(intersects.length > 0) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private onTouchStart(event: TouchEvent) {\r\n\r\n        this.onMouseDown(event)\r\n    }\r\n    private onTouchEnd(event) {\r\n        \r\n        this.onMouseUp(event)\r\n    }\r\n    private onTouchCancel(event) {\r\n        \r\n        this.onMouseUp(event)\r\n    }\r\n    private onTouchMove(event) {\r\n        \r\n        this.onMouseMove(event)\r\n    }\r\n\r\n    private onLeaveContainer() {\r\n\r\n        console.log('left')\r\n        ObjectControl.selected = null\r\n\r\n        this.mouseDown = false\r\n    }\r\n\r\n    // onkeydown = onkeyup = {\r\n    //     e = e || event; // to deal with IE\r\n    //     map[e.keyCode] = e.type == 'keydown';\r\n    //     /* insert conditional here */\r\n    // }\r\n\r\n    public onKeyDown(e: KeyboardEvent) {\r\n\r\n        // MAKE POSSIBLE TO CLICK TWO KEYS e.g. X AND Y AND DONT CHANGE Z \r\n        const key = e.key.toLowerCase()\r\n\r\n        if(key == 'x' || key == 'y' || key == 'z' || key == '<') {\r\n            \r\n            this.XKey = false\r\n            this.YKey = false\r\n            this.ZKey = false\r\n            \r\n            this.keyMap.set(key, e.type == 'keydown')\r\n\r\n            if(this.keyMap.get('x')) {\r\n\r\n                this.XKey = true\r\n            }\r\n            if(this.keyMap.get('y')) {\r\n                \r\n                this.YKey = true\r\n            }\r\n            if(this.keyMap.get('z') || this.keyMap.get('<')) {\r\n\r\n                this.ZKey = true\r\n            }\r\n        }\r\n    }\r\n\r\n    public onKeyUp(e) {\r\n\r\n        const key = e.key.toLowerCase()\r\n\r\n        if(key == 'x' || key == 'y' || key == 'z' || key == '<') {\r\n        \r\n            this.keyMap.set(key, e.type == 'keydown')\r\n\r\n            if(this.keyMap.get('x') && this.keyMap.get('y') || \r\n                this.keyMap.get('x') && (this.keyMap.get('z') || this.keyMap.get('<')) || \r\n                this.keyMap.get('y') && (this.keyMap.get('z') || this.keyMap.get('<')) ||\r\n                this.keyMap.get('x') && this.keyMap.get('y') && (this.keyMap.get('z') || this.keyMap.get('<'))) {\r\n                \r\n                if(this.keyMap.get(key)) {\r\n\r\n                    this.XKey = false\r\n                }\r\n            }\r\n            else {\r\n                \r\n                this.XKey = true\r\n                this.YKey = true\r\n                this.ZKey = true\r\n            }\r\n        }\r\n    }\r\n\r\n    onResize() {\r\n\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\r\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\r\nimport { CopyShader } from 'three/examples/jsm/shaders/CopyShader'\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\r\nimport { GridHelper, Line, AxesHelper, Vector3, PerspectiveCamera, OrthographicCamera } from 'three'\r\nimport { ObjectControl } from './object-control'\r\nimport { Theremin } from './theremin/theremin'\r\nimport { Theremin3D } from './theremin/theremin3D'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nimport { Color } from './color'\r\n\r\n\r\nexport enum CameraType {\r\n\r\n    PERSPECTIVE,\r\n    ORTHOGRAPHIC\r\n}\r\n\r\nexport class SceneManager {\r\n\r\n    public container: HTMLElement\r\n\r\n    public static renderer: THREE.WebGLRenderer\r\n    public static perspective: THREE.PerspectiveCamera\r\n    public static orthographic: THREE.OrthographicCamera\r\n    public static scene: THREE.Scene\r\n    public static orbit: OrbitControls\r\n\r\n    public static activeCamera: CameraType\r\n\r\n    public composer: EffectComposer\r\n    public renderPass: RenderPass\r\n    public effectFXAA: ShaderPass\r\n    public copyShader: ShaderPass\r\n    public vertexShader: string\r\n    public fragmentShader: string\r\n\r\n    public id: number\r\n\r\n    public static w:number\r\n    public static h:number\r\n\r\n    public static environmentObjs: THREE.Object3D[] = []\r\n    public sphere: THREE.Mesh\r\n    public xyPlane: THREE.Mesh\r\n    public yzPlane: THREE.Mesh\r\n    public xzPlane: THREE.Mesh\r\n\r\n    public x: THREE.Line\r\n    public y: THREE.Line\r\n    public z: THREE.Line\r\n\r\n\r\n    constructor(container: HTMLElement) {\r\n\r\n        this.container = container\r\n\r\n        SceneManager.w = window.innerWidth\r\n        SceneManager.h = window.innerHeight\r\n\r\n        SceneManager.activeCamera = CameraType.PERSPECTIVE\r\n\r\n        SceneManager.renderer = new THREE.WebGLRenderer({ antialias: true })\r\n        SceneManager.renderer.setSize(SceneManager.w, SceneManager.h)\r\n        SceneManager.renderer.setClearColor(Color.BG)\r\n        SceneManager.renderer.toneMapping = THREE.Uncharted2ToneMapping\r\n        this.container.append(SceneManager.renderer.domElement)\r\n\r\n        SceneManager.perspective = new THREE.PerspectiveCamera(50, SceneManager.w / SceneManager.h, .1, 10000)\r\n        SceneManager.perspective.position.set(50, 50, 50)\r\n\r\n        SceneManager.orthographic = new THREE.OrthographicCamera(SceneManager.w / -2, SceneManager.w / 2, SceneManager.h / 2, SceneManager.h / -2, .1, 1000)\r\n        SceneManager.orthographic.position.set(0, 0, 5)\r\n        SceneManager.orthographic.zoom = 50\r\n\r\n        SceneManager.scene = new THREE.Scene()\r\n        SceneManager.scene.background = new THREE.Color(Color.BG)\r\n        // this.scene.add(new GridHelper(1000, 100, new THREE.Color(0xAAAAAA)))\r\n        // this.scene.add(new AxesHelper(100))\r\n\r\n        SceneManager.orbitCamera = SceneManager.perspective\r\n\r\n        this.createAxes()\r\n        this.createLight()\r\n\r\n        // this.addCubeMap()\r\n    }\r\n\r\n    public static get currentCamera(){\r\n\r\n        return this.activeCamera == CameraType.PERSPECTIVE ? SceneManager.perspective : SceneManager.orthographic\r\n    }\r\n\r\n    \r\n    public static set orbitCamera(camera: THREE.Camera) { \r\n\r\n        if(SceneManager.orbit) {\r\n\r\n            SceneManager.orbit.reset()\r\n            SceneManager.orbit.dispose()\r\n        }\r\n        \r\n        if(camera instanceof PerspectiveCamera){\r\n            SceneManager.orbit = new OrbitControls(camera, SceneManager.renderer.domElement)\r\n            SceneManager.orbit.enableDamping = true\r\n            SceneManager.orbit.dampingFactor = .2\r\n        }\r\n        else if(camera instanceof OrthographicCamera) {\r\n            SceneManager.orbit = new OrbitControls(camera, SceneManager.renderer.domElement)\r\n            SceneManager.orbit.enableDamping = true\r\n            SceneManager.orbit.dampingFactor = .2\r\n            SceneManager.orbit.enableRotate = false\r\n        }\r\n    }\r\n\r\n    private createAxes() {\r\n\r\n        let points: THREE.Vector3[] = []\r\n\r\n        // X\r\n        points.push(new THREE.Vector3(-10000, 0, 0))\r\n        points.push(new THREE.Vector3(10000, 0, 0))\r\n        let geometry = new THREE.BufferGeometry().setFromPoints(points)\r\n        let material = new THREE.LineBasicMaterial( { color: Color.X } )\r\n        this.x = new THREE.Line( geometry, material )\r\n        this.x.position.set(0, 0, 0)\r\n        SceneManager.scene.add(this.x)\r\n        \r\n        // Y\r\n        points = []\r\n        points.push(new THREE.Vector3(0, -10000, 0))\r\n        points.push(new THREE.Vector3(0, 10000, 0))\r\n        geometry = new THREE.BufferGeometry().setFromPoints(points)\r\n        material = new THREE.LineBasicMaterial( { color: Color.Y } )\r\n        this.y = new THREE.Line( geometry, material )\r\n        this.y.position.set(0, 0, 0)\r\n        SceneManager.scene.add(this.y)\r\n\r\n        // Z\r\n        points = []\r\n        points.push(new THREE.Vector3(0, 0, -10000))\r\n        points.push(new THREE.Vector3(0, 0, 10000))\r\n        geometry = new THREE.BufferGeometry().setFromPoints(points)\r\n        material = new THREE.LineBasicMaterial( { color: Color.Z } )\r\n        this.z = new THREE.Line( geometry, material )\r\n        this.z.position.set(0, 0, 0)\r\n        SceneManager.scene.add(this.z)\r\n    }\r\n    \r\n        \r\n\r\n    private createLight() {\r\n\r\n        let hemi = new THREE.HemisphereLight(0xFFFdEF, 0xFFFedF, .8)\r\n        SceneManager.scene.add(hemi)\r\n    }\r\n\r\n    private addCubeMap() {\r\n\r\n        SceneManager.scene.background = new THREE.CubeTextureLoader()\r\n            .setPath( '/assets/images/milky-way/' )\r\n            .load( [\r\n                'px.png',\r\n                'nx.png',\r\n                'py.png',\r\n                'ny.png',\r\n                'pz.png',\r\n                'nz.png'\r\n            ] );\r\n    }\r\n\r\n    public update() {\r\n\r\n        if(SceneManager.orbit) SceneManager.orbit.update()\r\n        \r\n        if(SceneManager.activeCamera == CameraType.PERSPECTIVE) \r\n            SceneManager.renderer.render(SceneManager.scene, SceneManager.perspective)\r\n        else if(SceneManager.activeCamera == CameraType.ORTHOGRAPHIC)  \r\n            SceneManager.renderer.render(SceneManager.scene, SceneManager.orthographic)\r\n\r\n        // console.log(Theremin.instance.sounds, Theremin3D.instance.sounds3D)\r\n\r\n    }\r\n\r\n    public distanceToCenter(pos: Vector3) {\r\n\r\n        return pos.distanceTo(SceneManager.scene.position)\r\n    }\r\n\r\n    // ROTATE CAMERA ON KEY 1 2 3 or SHIFT 1 2 3 for negative area to be aligned to a axes\r\n    public rotateCamera(axis: string) {\r\n\r\n        if(axis == 'x') {\r\n\r\n            SceneManager.perspective.position.set(0, 0, this.distanceToCenter(SceneManager.perspective.position))\r\n        }\r\n        else if(axis == 'y') {\r\n\r\n            SceneManager.perspective.position.set(this.distanceToCenter(SceneManager.perspective.position), 0, 0)\r\n        }\r\n        else if(axis == 'z') {\r\n\r\n            SceneManager.perspective.position.set(this.distanceToCenter(SceneManager.perspective.position), 0, 0)\r\n        }\r\n    }\r\n\r\n\r\n    resize() {\r\n\r\n        SceneManager.w = this.container.clientWidth\r\n        SceneManager.h = this.container.clientHeight\r\n\r\n        SceneManager.perspective.aspect = SceneManager.w / SceneManager.h\r\n        SceneManager.perspective.updateProjectionMatrix()\r\n\r\n        SceneManager.renderer.setPixelRatio(SceneManager.w / SceneManager.h)\r\n        SceneManager.renderer.setSize(SceneManager.w, SceneManager.h)\r\n    }\r\n}","import { Component, AfterViewInit, OnDestroy, Input } from '@angular/core';\r\n\r\nimport { ObjectControl } from '../object-control';\r\nimport { Theremin3D } from '../theremin/theremin3D';\r\nimport { Note } from '../theremin/note';\r\nimport { Note3D } from '../theremin/note3D';\r\n\r\n\r\n@Component({\r\n  selector: 'selected-menu',\r\n  templateUrl: './selected.component.html',\r\n  styles: [\r\n    `\r\n    :host {\r\n        \r\n        display:block;    \r\n        width: 100%;\r\n        height: auto;\r\n        color: #fefefe;\r\n    \r\n        resize: vertical;\r\n        overflow: auto;\r\n    }\r\n    `\r\n  ]\r\n})\r\nexport class Selected implements AfterViewInit {\r\n\r\n  @Input('theremin3D') theremin3D: Theremin3D\r\n\r\n  public get selected() { return ObjectControl.selected }\r\n  public get selectedObjs() { return ObjectControl.selectedObjs }\r\n\r\n  public get isNote() { return this.selected instanceof Note3D }\r\n\r\n\r\n\r\n\r\n  ngAfterViewInit() {\r\n\r\n\r\n  }\r\n\r\n  private isSelected(type: string) {\r\n\r\n    if(ObjectControl.selected && ObjectControl.selected != null)\r\n        return true\r\n    else return false\r\n  }\r\n\r\n  public changeVolume() {\r\n\r\n  }\r\n\r\n  public setWave(wave: OscillatorType) {\r\n\r\n    (this.selected.ctrl as Note).wave = wave\r\n  }\r\n\r\n  public toggleMuteSelected() {\r\n\r\n    if(ObjectControl.selected.ctrl.muted)\r\n      ObjectControl.selected.unmute()\r\n    else ObjectControl.selected.mute()\r\n    \r\n  }\r\n\r\n\r\n  public groupSoundEntities() {\r\n\r\n    // let ses: Sound[] = []\r\n    // let ses3D: Sound3D[] = []\r\n    // ObjectControl.selectedObjs.forEach(obj => {\r\n\r\n    //   // Collect all selected Sounds\r\n    //   ses.push(this.theremin3D.getNoteByObj(obj).ctrl)\r\n    //   // Collect all selected Sound3D's\r\n    //   ses3D.push(this.theremin3D.getNoteByObj(obj))\r\n    // })\r\n\r\n    // // Make Chord from Sounds\r\n    // let chord = this.theremin3D.theremin.groupNotesToChord(ses)\r\n\r\n    // // Add 3D objs to new Chord3D obj\r\n    // this.theremin3D.groupNotesToChord(chord, ses3D)\r\n  }\r\n\r\n  public ungroupSoundEntities() {\r\n\r\n    // let ses: Sound[] = []\r\n    // let ses3D: Sound3D[] = []\r\n    // ObjectControl.selectedObjs.forEach(obj => {\r\n\r\n    //   ses3D.push(this.theremin3D.getNoteByObj(obj))\r\n    //   ses.push(this.theremin3D.getNoteByObj(obj).ctrl)\r\n    // })\r\n\r\n    // let chord = this.theremin3D.theremin.ungroupNotes(ses)\r\n\r\n    // this.theremin3D.ungroupNotes(ses3D, chord)\r\n  }\r\n}","\r\n<div id=\"selected-menu\" *ngIf=\"selected\">\r\n\r\n    <div>\r\n        <div> {{ selected.ctrl.type + ' id:' + selected.ctrl.id }}</div>\r\n\r\n        <label for=\"wave\">Wave</label>\r\n        <select *ngIf=\"isNote\" id=\"wave\" name=\"wave\" (change)=\"setWave($event.target.value)\">\r\n            <option value=\"sine\">Sine</option>\r\n            <option value=\"square\">Square</option>\r\n            <option value=\"sawtooth\">Sawtooth</option>\r\n            <option value=\"triangle\">Triangle</option>\r\n        </select>\r\n\r\n\r\n<!-- \r\n        <label for=\"volume\">Volume {{ selectedVolume }}</label>\r\n        <input type=\"range\" min=\"0\" max=\"1\" step=\".01\" class=\"slider\" id=\"volume\" name=\"volume\" [(ngModel)]=\"selectedVolume\">\r\n        \r\n        <label for=\"frequency\">Frequency: {{ selectedFrequency }}</label>\r\n        <input type=\"range\" min=\"0\" max=\"1000\" value=\"50\" class=\"slider\" id=\"frequency\" name=\"frequency\" [(ngModel)]=\"selectedFrequency\"> -->\r\n        \r\n        <!--<label for=\"attack\">Attack</label>\r\n        <input type=\"range\" min=\"0\" max=\"100\" value=\"50\" class=\"slider\" id=\"attack\" name=\"attack\" [(ngModel)]=\"attack\">\r\n        \r\n        <label for=\"release\">Release</label>\r\n        <input type=\"range\" min=\"0\" max=\"100\" value=\"50\" class=\"slider\" id=\"release\" name=\"release\" [(ngModel)]=\"release\">\r\n        \r\n        <label for=\"sustain\">Sustain</label>\r\n        <input type=\"range\" min=\"0\" max=\"100\" value=\"50\" class=\"slider\" id=\"sustain\" name=\"sustain\" [(ngModel)]=\"sustain\">\r\n\r\n        <label for=\"affectedByTact\">Affected by tact</label>\r\n        <input type=\"checkbox\" name=\"affectedByTact\"/>\r\n\r\n        <label for=\"stakato\">Stakato</label>\r\n        <input type=\"checkbox\" name=\"stakato\"/>-->\r\n            \r\n        <span *ngIf=\"false\">Part of chord </span>\r\n        \r\n        <button (click)=\"toggleMuteSelected()\">Mute/Unmute</button>\r\n\r\n\r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"selectedObjs.length > 1\">\r\n        Alarm: A Note is already part of chord...\r\n        <button (click)=\"groupSoundEntities()\">Group</button>\r\n\r\n        <button>Ungroup</button>\r\n    </div>\r\n\r\n</div>\r\n","\r\nexport class Storage {\r\n\r\n  public static baseName: string = \"etherphone\";\r\n\r\n  public static load(): string {\r\n    return window.localStorage.getItem(Storage.baseName + \"-save\");\r\n  }\r\n\r\n  public static save(file: string) {\r\n    window.localStorage.setItem(Storage.baseName + \"-save\", file);\r\n  }\r\n}\r\n","\r\n\r\nexport enum Axis {\r\n\r\n    x = 'x',\r\n    y = 'y',\r\n    z = 'z'    \r\n}","import { Vector3, Color } from 'three'\r\nimport { Theremin } from './theremin'\r\nimport * as Tone from 'tone'\r\nimport { Tools } from '../tools/tools'\r\n\r\nexport class Note{\r\n    \r\n    public id: number\r\n    public type: string\r\n\r\n    public gain: Tone.Gain\r\n    public osc: Tone.Oscillator\r\n    public _frequency: number\r\n    public _wave: OscillatorType\r\n    private _volume: number\r\n\r\n    public isPlaying: boolean = false\r\n    public muted: boolean = false\r\n\r\n    public color: Color\r\n\r\n    public position: Vector3\r\n\r\n    public get frequency() { return this._frequency }\r\n    public set frequency(val) { \r\n\r\n        if(val == null) return\r\n\r\n        this._frequency = Math.abs(val)\r\n\r\n        this.osc.frequency.setValueAtTime(this._frequency, Tone.context.currentTime)\r\n    }\r\n\r\n    public get volume() : number { return this._volume }\r\n    public set volume(val: number) {\r\n        if(val == null) return\r\n\r\n        this._volume = Math.abs(val)\r\n\r\n        this.gain.gain.value = val\r\n    }\r\n\r\n    public get wave() : OscillatorType { return this._wave }\r\n    public set wave(val: OscillatorType) { \r\n        this._wave = val\r\n        if(val && this.osc) this.osc.type = this._wave\r\n    }\r\n\r\n    constructor() {\r\n\r\n        this.id = Tools.getUniqueID()\r\n        this.type = 'note'\r\n        this.color = new Color().setHSL( Math.random(), 0.7, Math.random() * 0.2 + 0.05 );\r\n\r\n        this.gain = new Tone.Gain()\r\n        this.volume = 0\r\n        this.gain.connect(Theremin.masterVolume)\r\n\r\n        this.osc = new Tone.Oscillator(this.frequency)\r\n        this.osc.connect(this.gain)\r\n        this.frequency = 0\r\n\r\n        this.position = new Vector3(0, 0, 0)\r\n    }\r\n\r\n    public update() {\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    // public createOsc() {\r\n\r\n    //     this.gainNode = this.audioContext.createGain()\r\n\r\n    //     this.osc = this.audioContext.createOscillator()\r\n    //     this.osc.type = 'sine'\r\n    //     this.osc.connect(this.gainNode)\r\n    //     this.gainNode.connect(this.audioContext.destination)\r\n\r\n    //     this.osc.frequency.value = this._frequency\r\n\r\n    //     this.volume = this.volume\r\n\r\n    //     this.position = new Vector3(_frequency / Theremin.instance.X.sF, this.volume * Theremin.instance.Y.sF, 0)\r\n    // }\r\n\r\n    public destroy() {\r\n\r\n        // this.gainNode.gain.setValueAtTime(this.gainNode.gain.value, this.audioContext.currentTime)\r\n\r\n        // this.gainNode.gain.exponentialRampToValueAtTime(.0000001, length + .03)\r\n\r\n        window.setTimeout(()=> {\r\n\r\n            this.osc.disconnect()\r\n            this.osc = null\r\n        }, 40)\r\n\r\n\r\n\r\n        this.wave = null\r\n        this._volume = null\r\n        this.color = null\r\n        this.position = null\r\n        this.type = null\r\n        this.id = null\r\n        this.isPlaying = null\r\n        this.muted = null\r\n    }\r\n    \r\n    public play(length?: number) {\r\n\r\n        this.isPlaying = true\r\n\r\n        this.osc.stop(Tone.context.currentTime)\r\n        this.osc.start(Tone.context.currentTime)\r\n\r\n        // let convolver = reverb()\r\n\r\n        // this.osc.connect(convolver)\r\n\r\n        // this.gainNode.gain.setValueAtTime(this.gainNode.gain.value, this.audioContext.currentTime)\r\n\r\n        // this.gainNode.gain.exponentialRampToValueAtTime(.0001, length + .03)\r\n\r\n        // this.osc.stop(Tone.context.currentTime + length + .03)\r\n\r\n        if(length != undefined)\r\n            this.osc.stop(Tone.context.currentTime + length)\r\n    }\r\n\r\n    public stop() {\r\n\r\n        this.isPlaying = false\r\n\r\n        if(!this.osc) return\r\n\r\n        // this.gainNode.gain.setValueAtTime(this.gainNode.gain.value, this.audioContext.currentTime)\r\n\r\n        // this.gainNode.gain.exponentialRampToValueAtTime(.0001, this.audioContext.currentTime + .03)\r\n\r\n        this.osc.stop(Tone.context.currentTime + .03)\r\n    }\r\n    \r\n    public mute() {\r\n\r\n        this.muted = true\r\n    }\r\n\r\n    public addReverb() {\r\n\r\n    }\r\n\r\n    public unmute() {\r\n\r\n        this.muted = false\r\n\r\n        this.gain.gain.setValueAtTime(this._volume, Tone.context.currentTime)\r\n    }\r\n\r\n    public serializeOut() {\r\n\r\n        return {\r\n            id: this.id,\r\n            color: this.color.getHex(),\r\n            frequency: this.frequency,\r\n            volume: this.volume,\r\n            wave: this.wave,\r\n        }\r\n    }\r\n\r\n    public serializeIn(obj: {}) {\r\n        console.log('obj', obj)\r\n        this.id = obj['id']\r\n        this.color.setHex(obj['color'])\r\n        this.frequency = obj['frequency']\r\n        this.volume = obj['volume']\r\n        // this.wave = obj['wave']\r\n    }\r\n}","import { Mesh, SphereBufferGeometry, MeshNormalMaterial, Vector3, MeshBasicMaterial, Color, Object3D, MeshStandardMaterial, ShaderMaterial, Clock } from 'three'\r\nimport { Note } from './note'\r\nimport { DistanceLabel } from '../tools/labels/distance-label'\r\nimport { MemoryLabel } from '../tools/labels/memory-label'\r\nimport { AxesLabel } from '../tools/labels/axes-label'\r\nimport { Tools } from '../tools/tools'\r\nimport { LoadingManager } from '../tools/loading-manager'\r\n\r\nimport { FragmentShader } from '../shaders/fragment-shaders'\r\nimport { VertexShader } from '../shaders/vertex-shaders'\r\nimport * as Tone from 'tone'\r\n\r\n\r\nexport class Note3D{\r\n\r\n    public ctrl: Note\r\n    public obj: Mesh\r\n\r\n    public distanceLabel: DistanceLabel\r\n    public memoryLabel: MemoryLabel\r\n    public axesLabel: AxesLabel\r\n\r\n    public get position() { return this.obj.position }\r\n    public set position(val:Vector3) { \r\n\r\n        if(val == null) return\r\n\r\n        this.obj.position.copy(val)\r\n    }\r\n\r\n\r\n\r\n    constructor(note: Note) {\r\n\r\n        this.ctrl = note\r\n\r\n\r\n        this.obj = new Mesh(\r\n            new SphereBufferGeometry(2, 20, 20), \r\n            new MeshStandardMaterial({\r\n                color: this.ctrl.color,\r\n            })\r\n        )\r\n        this.obj.name = 'osc.3D'\r\n        this.obj.userData.id = note.id\r\n\r\n        this.position = new Vector3()\r\n\r\n        this.distanceLabel = new DistanceLabel(this)\r\n        this.memoryLabel = new MemoryLabel(this)\r\n        this.axesLabel = new AxesLabel(this)\r\n        \r\n        this.distanceLabel.enabled = false\r\n        this.memoryLabel.enabled = false\r\n        this.axesLabel.enabled = true\r\n\r\n        \r\n        // LoadingManager.loadGLTF('/assets/models/shape.glb', (gltf)=> {\r\n            \r\n        //     const uniform = {\r\n        //         uColor : {\r\n        //             value: new Color(1, 1, 0)\r\n        //         },\r\n        //         time: {\r\n        //             type: 'f',\r\n        //             value: Tone.context.currentTime\r\n        //         }\r\n        //     }\r\n\r\n        //     this.obj.geometry = gltf.children[0].geometry\r\n        //     this.obj.material = new ShaderMaterial({\r\n        //         // wireframe: true,\r\n        //         uniforms: uniform,\r\n        //         vertexShader: VertexShader.distortion,\r\n        //         fragmentShader: FragmentShader.meshbasicmaterial\r\n        //     })\r\n        // })\r\n\r\n\r\n        this.move(this.ctrl.position)\r\n    }\r\n\r\n    public update() {\r\n\r\n        this.move(this.ctrl.position)\r\n\r\n\r\n        this.distanceLabel.update()\r\n\r\n        this.memoryLabel.update()\r\n\r\n        this.axesLabel.update()\r\n\r\n        if(this.obj && this.obj.material['uniforms'])\r\n            this.obj.material['uniforms'].time.value = Tone.context.currentTime\r\n    }\r\n\r\n    public move(moveTo: Vector3) {\r\n\r\n        this.position = moveTo\r\n    }\r\n\r\n    public select() {\r\n\r\n        if(this.axesLabel.enabled) this.axesLabel.reset()\r\n    }\r\n    \r\n    public unselect() {\r\n\r\n    }\r\n\r\n    public play(length?: number) {\r\n\r\n        console.log('length', length * 1000)\r\n        this.obj.scale.set(2, 2, 2)\r\n\r\n        window.setTimeout(()=> {\r\n\r\n            this.obj.scale.set(1, 1, 1)\r\n\r\n        }, length * 1000)\r\n    }\r\n\r\n\r\n\r\n\r\n    public mouseUp() {\r\n        \r\n    }\r\n\r\n    public mute() {\r\n\r\n        this.ctrl.mute()\r\n    }\r\n\r\n    public unmute() {\r\n\r\n        this.ctrl.unmute()\r\n    }\r\n\r\n    \r\n    public destroy() {\r\n\r\n        if(this.distanceLabel) {\r\n            this.distanceLabel.enabled = false\r\n            this.distanceLabel = null\r\n        }\r\n        if(this.memoryLabel) {\r\n            this.memoryLabel.enabled = false\r\n            this.memoryLabel = null\r\n        }\r\n        if(this.axesLabel) {\r\n            this.axesLabel.enabled = false\r\n            this.axesLabel = null\r\n        }\r\n\r\n        Tools.dispose(this.obj)\r\n    }\r\n\r\n}","import { Component, Input, ElementRef } from '@angular/core'\r\nimport { ObjectControl } from '../object-control'\r\nimport { Axis } from './axis'\r\nimport { Theremin } from './theremin'\r\nimport { Theremin3D } from './theremin3D'\r\n\r\n\r\n@Component({\r\n    selector: 'theremin',\r\n    template: `\r\n\r\n        <div class=\"btn\" (click)=\"reset()\">New</div>\r\n\r\n        <div class=\"btn\" (click)=\"addOsc()\">Plus</div>\r\n\r\n        <!--<label for=\"x\">X</label>\r\n        <select name=\"x\">\r\n            <option *ngFor=\"let b of behaviours; let i = index\" value=\"i\">{{ b.name }}</option>\r\n        </select>\r\n        \r\n        <label for=\"y\">Y</label>\r\n        <select name=\"y\">\r\n            <option *ngFor=\"let b of behaviours; let i = index\" value=\"i\">{{ b.name }}</option>\r\n        </select>\r\n        \r\n        <label for=\"z\">Z</label>\r\n        <select name=\"z\">\r\n            <option *ngFor=\"let b of behaviours; let i = index\" value=\"i\">{{ b.name }}</option>\r\n        </select>-->\r\n        \r\n        <div class=\"btn b gap-r\" (click)=\"toggleMemoryLabel()\">Memory Label</div>\r\n        <div class=\"btn b gap-r\" (click)=\"toggleDistanceLabel()\">Distance Label</div>\r\n        <div class=\"btn b gap-r\" (click)=\"toggleAxesLabel()\">Axes Label</div>\r\n\r\n    `,\r\n    styles: [\r\n  \r\n        `\r\n        `\r\n    ]\r\n    \r\n  })\r\n  export class ThereminView {\r\n\r\n    @Input('theremin') public theremin: Theremin\r\n    @Input('theremin3D') public theremin3D: Theremin3D\r\n\r\n    private host: HTMLElement\r\n\r\n\r\n    constructor(private hostRef:ElementRef) {\r\n\r\n    this.host = this.hostRef.nativeElement\r\n\r\n    }\r\n\r\n    get behaviours() { return Theremin.axesBehaviours }\r\n\r\n    getBehaviourByAxis(axis: Axis) {\r\n\r\n    for(let b of Theremin.axesBehaviours) {\r\n\r\n        if(b.axis == axis) return b\r\n    }\r\n    }\r\n\r\n\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    public reset() {\r\n\r\n        this.theremin3D.reset()\r\n        this.theremin.reset()\r\n    }\r\n      \r\n    public addOsc(frequency?: number, cb?: Function) {\r\n\r\n        let note = this.theremin.addNote(frequency == undefined ? 100 : frequency)\r\n        let note3D = this.theremin3D.addNote3D(note)\r\n\r\n        if(cb) cb(note3D)\r\n    }\r\n\r\n\r\n        \r\n    public toggleAxesLabel() {\r\n\r\n        this.theremin3D.notes3D.forEach(note => {\r\n\r\n            note.axesLabel.enabled = !note.axesLabel.enabled\r\n            note.axesLabel.update()\r\n        })\r\n    }\r\n    \r\n    public toggleMemoryLabel() {\r\n\r\n        this.theremin3D.notes3D.forEach(note => {\r\n\r\n            note.memoryLabel.enabled = !note.memoryLabel.enabled\r\n            note.memoryLabel.update()\r\n        })\r\n    }\r\n    \r\n    public toggleDistanceLabel() {\r\n\r\n        this.theremin3D.notes3D.forEach(note => {\r\n\r\n            note.distanceLabel.enabled = !note.distanceLabel.enabled\r\n            note.distanceLabel.update()\r\n        })\r\n    }\r\n  } ","import { Note } from './note'\r\nimport { AxesBehaviour } from '../axes-behaviours/axes-behaviour'\r\nimport { FrequencyShift } from '../axes-behaviours/frequency-shfit'\r\nimport { VolumeShift } from '../axes-behaviours/volume-shift'\r\nimport { Octivator } from '../axes-behaviours/octivator'\r\nimport { AdditiveSynthesis } from '../axes-behaviours/additive-synthesis'\r\nimport { Axis } from './axis'\r\nimport { OctahedronBufferGeometry, Vector3 } from 'three'\r\nimport * as Tone from 'tone'\r\n\r\nexport class Theremin {\r\n\r\n    static instance: Theremin\r\n\r\n    static masterVolume: Tone.Gain\r\n    public storedVolume: number\r\n    public volume: number\r\n    private muted: boolean = false\r\n\r\n    public notes: Note[] = []\r\n\r\n    public static _x: AxesBehaviour\r\n    public static get x() { return Theremin._x }\r\n    public static set x(behaviour: AxesBehaviour) {\r\n\r\n        Theremin._x = behaviour\r\n        Theremin._x.axis = Axis.x\r\n    }\r\n\r\n    public static _y: AxesBehaviour\r\n    public static get y() { return Theremin._y }\r\n    public static set y(behaviour: AxesBehaviour) {\r\n\r\n        Theremin._y = behaviour\r\n        Theremin._y.axis = Axis.y\r\n    }\r\n    public static _z: AxesBehaviour\r\n    public static get z() { return Theremin._z }\r\n    public static set z(behaviour: AxesBehaviour) {\r\n\r\n        Theremin._z = behaviour\r\n        Theremin._z.axis = Axis.z\r\n    }\r\n\r\n\r\n\r\n    public static axesBehaviours: AxesBehaviour[] = []\r\n\r\n    public isPlaying: boolean = true\r\n\r\n\r\n    constructor() {\r\n\r\n        Theremin.instance = this\r\n\r\n        this.volume = .7\r\n\r\n        Theremin.masterVolume = new Tone.Gain(this.volume).toDestination()\r\n\r\n        this.storedVolume = Theremin.masterVolume.gain.value\r\n\r\n        Theremin.masterVolume.gain.value = this.volume\r\n\r\n        Theremin.x = new FrequencyShift()\r\n        Theremin.y = new VolumeShift()\r\n        Theremin.z = new Octivator()\r\n    }\r\n\r\n\r\n    public update() {\r\n\r\n        for(let note of this.notes) {\r\n\r\n            Theremin.computePosition(note)\r\n        }\r\n    }\r\n\r\n\r\n    public setAxisbehaviour(axis: string, behaviour: AxesBehaviour) {\r\n\r\n    }\r\n\r\n    public reset() {\r\n\r\n        let notes: Note[] = []\r\n\r\n        this.notes.forEach(note => { notes.push(note)})\r\n        notes.forEach(note => this.deleteNote(note))\r\n\r\n        this.notes = []\r\n        Theremin.masterVolume.gain.setValueAtTime(.8, Tone.context.currentTime)\r\n\r\n        Theremin.x = new FrequencyShift()\r\n        Theremin.y = new VolumeShift()\r\n        Theremin.z = new Octivator()\r\n    }\r\n\r\n    public addNote(frequency?: number) : Note {\r\n\r\n        let sn = new Note()\r\n\r\n        this.notes.push(sn)\r\n\r\n        sn.play()\r\n\r\n        return sn\r\n    }\r\n\r\n    public deleteNote(note: Note) : boolean {\r\n\r\n        if(!note) return false\r\n\r\n        let i = this.notes.indexOf(note)\r\n\r\n        if(i != -1) {\r\n\r\n            note.destroy()\r\n            this.notes.splice(i, 1)\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    public groupNotesToChord(_ses: Note[]) {\r\n\r\n        // let chord = new Chord(_ses)\r\n\r\n        // this.notes.push(chord)\r\n\r\n        // chord.notes.forEach(se => {\r\n\r\n        //     se.parent = chord\r\n\r\n        //     // if(se.parent) {\r\n        //     // }\r\n        // })\r\n\r\n        // return chord\r\n    }\r\n\r\n    public ungroupNotes(_ses: Note[]) {\r\n\r\n        return null\r\n    }\r\n\r\n    // public removeNoteFromChord(chord: Chord, note: Note) {\r\n\r\n    //     let i = chord.notes.indexOf(note)\r\n\r\n    //     if(i >= 0) chord.notes.splice(i, 1)\r\n        \r\n    //     this.notes.push(note)\r\n    // }\r\n\r\n    // public splitChord(chord: Chord) {\r\n\r\n    //     chord.notes.forEach(note => {\r\n\r\n    //         this.notes.push(note)\r\n    //     })\r\n    // }\r\n\r\n    \r\n    public static computePosition(note: Note) {\r\n\r\n        if(Theremin.x) Theremin.x.compute1DPosition(note)\r\n        if(Theremin.y) Theremin.y.compute1DPosition(note)\r\n        if(Theremin.z) Theremin.z.compute1DPosition(note)\r\n    }\r\n\r\n    public static computeFromPosition(note: Note, position: Vector3) {\r\n\r\n        if(Theremin.x) Theremin.x.processAlongDimension(note, position)\r\n        if(Theremin.y) Theremin.y.processAlongDimension(note, position)\r\n        if(Theremin.z) Theremin.z.processAlongDimension(note, position)\r\n    }\r\n\r\n    public mute() {\r\n\r\n        this.muted = true\r\n\r\n        Theremin.masterVolume.gain.setValueAtTime(0, Tone.context.currentTime)\r\n    }\r\n\r\n    public toggleOnOff(play?: boolean) {\r\n\r\n        if(play == undefined) play = !this.isPlaying\r\n\r\n        this.isPlaying = play\r\n\r\n        Theremin.masterVolume.gain.setValueAtTime(\r\n\r\n                play ? this.storedVolume : 0, \r\n                \r\n                Tone.context.currentTime\r\n            )\r\n    }\r\n\r\n\r\n\r\n    public serializeOut() : {} {\r\n\r\n        let _notes: {}[] = []\r\n \r\n        this.notes.forEach(note => {\r\n\r\n            _notes.push(note.serializeOut())\r\n        })\r\n\r\n        return {\r\n            notes: _notes,\r\n            masterVolume: Theremin.masterVolume.gain.value,\r\n            x: Theremin.x.name,\r\n            y: Theremin.y.name,\r\n            z: Theremin.z.name,\r\n        }\r\n    }\r\n\r\n    public serializeIn(obj: {}) {\r\n\r\n        if(obj['notes'] && obj['notes'].length > 0) {\r\n\r\n            for(let note of obj['notes']) {\r\n\r\n                let n = this.addNote()\r\n\r\n                n.serializeIn(note)\r\n\r\n                Theremin.computePosition(n)\r\n            }\r\n        }\r\n\r\n        if(obj['masterVolume']) \r\n            Theremin.masterVolume.gain.setValueAtTime(obj['masterVolume'], Tone.context.currentTime)\r\n\r\n        if(obj['x']) {\r\n\r\n        }\r\n        if(obj['y']) {\r\n\r\n        }\r\n        if(obj['z']) {\r\n\r\n        }\r\n    }\r\n}","import { Theremin } from './theremin';\r\nimport { Object3D, PlaneBufferGeometry, ShaderMaterial, MeshPhongMaterial, Mesh, CircleBufferGeometry, Vector3 } from 'three';\r\nimport { Note3D } from './note3D';\r\nimport { Note } from './note';\r\nimport { SceneManager } from '../scene-manager';\r\n\r\n\r\nexport class Theremin3D {\r\n\r\n    static instance: Theremin3D\r\n    public theremin: Theremin\r\n\r\n    public notes3D: Note3D[] = []\r\n    public objs: Object3D[] = []\r\n\r\n    public obj: Object3D\r\n\r\n    constructor(ctrl: Theremin) {\r\n\r\n        Theremin3D.instance = this\r\n\r\n        this.theremin = ctrl\r\n\r\n        this.obj = new Object3D()\r\n        this.obj.name = 'theremin.3D'\r\n\r\n\r\n        this.theremin.notes.forEach(note3D => {\r\n\r\n            this.addNote3D(note3D)\r\n        })\r\n    }\r\n\r\n\r\n    public update() {\r\n\r\n        for(let note3D of this.notes3D) { \r\n         \r\n            note3D.update()\r\n        }\r\n    }\r\n\r\n    public static moveNote(note3D: Note3D, position: Vector3) {\r\n\r\n        Theremin.computeFromPosition(note3D.ctrl, position)\r\n\r\n        note3D.update()\r\n    }\r\n\r\n\r\n    public getNoteByObj(obj: Object3D) : Note3D {\r\n       \r\n        for(let i = 0; i < this.notes3D.length; i++) {\r\n\r\n            if(this.notes3D[i].obj === obj) {\r\n\r\n                return this.notes3D[i]\r\n            }\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    public getNoteByID(id: number) : Note3D {\r\n       \r\n        for(let i = 0; i < this.notes3D.length; i++) {\r\n\r\n            if(this.notes3D[i].ctrl.id === id) {\r\n\r\n                return this.notes3D[i]\r\n            }\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    public addNote3D(note: Note) : Note3D {\r\n\r\n        let note3D = new Note3D(note)\r\n\r\n        this.notes3D.push(note3D)\r\n\r\n        this.objs.push(note3D.obj)\r\n\r\n        SceneManager.scene.add(note3D.obj)\r\n\r\n        return note3D\r\n    }\r\n\r\n    public removeNote3D(note3D: Note3D) : boolean {\r\n\r\n        if(!note3D) return false\r\n\r\n        let i = this.notes3D.indexOf(note3D)\r\n\r\n        if(i != -1) {\r\n\r\n            this.notes3D.splice(i, 1)\r\n            SceneManager.scene.remove(note3D.obj)\r\n            note3D.destroy()\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n    \r\n    // public groupNotesToChord(chord: Chord, _ses: Note3D[]) : Chord3D {\r\n\r\n    //     let chord3D = new Chord3D(chord, _ses)\r\n\r\n    //     this.notes3D.push(chord3D)\r\n\r\n    //     this.objs.push(chord3D.obj)\r\n\r\n    //     return chord3D\r\n    // }\r\n\r\n    // public ungroupNotes(_ses: Note3D[], chord: Chord3D) {\r\n\r\n    //     _ses.forEach(se => {\r\n\r\n    //         if(se instanceof Note3D) {\r\n\r\n    //             let note = (se as Note3D)\r\n\r\n    //             if((note.ctrl as Note).parent) {\r\n\r\n    //                 chord.removeNote(note)\r\n    //             }\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    public reset() {\r\n\r\n        let note3Ds: Note3D[] = []\r\n        this.notes3D.forEach(note3D => { note3Ds.push(note3D)})\r\n        note3Ds.forEach(note3D => {\r\n            this.removeNote3D(note3D)\r\n        })\r\n    }\r\n}\r\n","\r\nexport class DragWindow {\r\n\r\n    private mouseDown: boolean = false\r\n\r\n    private window: HTMLElement\r\n\r\n    private xOffset: number\r\n    private yOffset: number\r\n\r\n    private top: number = 0\r\n    private left: number = 0\r\n\r\n    private dragbarClassName: string\r\n    private dragElementClassName: string\r\n\r\n    constructor(_dragbarClassName?: string, _dragElementClassName?: string) {\r\n\r\n        this.dragbarClassName = _dragbarClassName || 'drag-bar'\r\n        this.dragElementClassName = _dragElementClassName || 'drag-window'\r\n    }\r\n\r\n\r\n    public onMouseDown(e) {\r\n\r\n        this.mouseDown = true\r\n        \r\n        if(e.target.classList.contains(this.dragbarClassName)) {\r\n    \r\n          this.window = e.target.closest('.'+this.dragElementClassName)\r\n\r\n          let rect = this.window.getBoundingClientRect()\r\n\r\n          this.left = rect.left\r\n          this.top = rect.top\r\n            \r\n          this.xOffset = e.pageX - this.left \r\n          this.yOffset = e.pageY - this.top\r\n        }\r\n        else this.window = null\r\n      }\r\n    \r\n      public onMouseMove(e) {\r\n\r\n        // IF WINDOW IS TOO BIG TO BE DRAGED \r\n        // SHRINK DOWN AND CALC RECT OFFSET TO SET LEFT AND TOP\r\n        \r\n        if(this.mouseDown && this.window) {\r\n    \r\n            let window = this.window.closest('.'+this.dragElementClassName) as HTMLElement\r\n    \r\n            this.left = e.pageX - this.xOffset\r\n            this.top = e.pageY - this.yOffset\r\n    \r\n            window.style.position = 'absolute'\r\n    \r\n            window.style.left = this.left + 'px'\r\n            window.style.top = this.top + 'px'\r\n    \r\n            window.style.width = '300px'\r\n            window.style.height = 'auto'\r\n            window.style.overflow = 'hidden'\r\n        }\r\n      }\r\n      \r\n      public onMouseUp(e) {\r\n        \r\n        this.mouseDown = false\r\n    \r\n        this.window = null\r\n\r\n        this.top = 0\r\n        this.left = 0\r\n      }\r\n\r\n}","import { SceneManager } from '../../scene-manager';\r\n\r\nimport * as THREE from 'three'\r\nimport { Note3D } from 'src/app/theremin/note3D';\r\n\r\nexport class AxesLine {\r\n\r\n    public p1: THREE.Vector3\r\n    public p2: THREE.Vector3\r\n\r\n    public lineGeo: THREE.BufferGeometry\r\n    public obj: THREE.Line\r\n\r\n    public name: string\r\n\r\n    public color: number\r\n\r\n    constructor(color: number, name?:string) {\r\n        \r\n        this.name = name\r\n\r\n        this.color = color\r\n\r\n        this.p1 = new THREE.Vector3()\r\n        this.p2 = new THREE.Vector3()\r\n\r\n        this.lineGeo = new THREE.BufferGeometry()\r\n\r\n        this.obj = new THREE.Line(this.lineGeo, new THREE.LineBasicMaterial({ color: new THREE.Color(this.color) }))\r\n    }\r\n\r\n    public update() {\r\n\r\n        this.lineGeo.setFromPoints([this.p1, this.p2])\r\n    }\r\n}\r\n\r\nexport class AxesLabel {\r\n\r\n    \r\n    private note: Note3D\r\n\r\n    private start: THREE.Vector3\r\n    private end: THREE.Vector3\r\n\r\n    private x: AxesLine\r\n    private y: AxesLine\r\n    private z: AxesLine\r\n\r\n    public obj: THREE.Object3D\r\n\r\n    private _enabled: boolean = false\r\n\r\n\r\n    constructor(_note: Note3D) {\r\n\r\n        this.note = _note\r\n\r\n        this.start = new THREE.Vector3()\r\n        this.end = new THREE.Vector3()\r\n\r\n        this.createLabel()\r\n    }\r\n\r\n\r\n\r\n    public get enabled() { return this._enabled }\r\n    public set enabled(val: boolean) {\r\n\r\n        this._enabled = val\r\n\r\n        this.obj.visible = val\r\n        \r\n        this.update()\r\n    }\r\n\r\n    public reset() {\r\n\r\n        this.end.copy(this.note.ctrl.position)\r\n\r\n        this.update()\r\n    }\r\n\r\n\r\n\r\n    public update() {\r\n\r\n        if(!this._enabled) return\r\n\r\n        this.end.copy(this.note.ctrl.position)\r\n\r\n        this.x.p1.setX(this.start.x)\r\n        this.x.p1.setY(this.end.y)\r\n        this.x.p1.setZ(this.start.z)\r\n        this.x.p2.setX(this.end.x)\r\n        this.x.p2.setY(this.end.y)\r\n        this.x.p2.setZ(this.start.z)\r\n        this.x.update()\r\n        \r\n        this.y.p1.copy(this.start)\r\n        this.y.p2.setX(this.start.x)\r\n        this.y.p2.setY(this.end.y)\r\n        this.y.p2.setZ(this.start.z)\r\n        this.y.update()\r\n        \r\n        this.z.p1.setX(this.end.x)\r\n        this.z.p1.setY(this.end.y)\r\n        this.z.p1.setZ(this.start.z)\r\n        this.z.p2.setX(this.end.x)\r\n        this.z.p2.setY(this.end.y)\r\n        this.z.p2.setZ(this.end.z)\r\n        this.z.update()\r\n    }\r\n\r\n    private createLabel() {\r\n\r\n        this.obj = new THREE.Object3D()\r\n        this.obj.name = 'distancelabel.obj'\r\n        this.obj.visible = this._enabled\r\n\r\n        this.x = new AxesLine(this.note.ctrl.color.getHex(), 'x')\r\n        this.obj.add(this.x.obj)\r\n        \r\n        this.y = new AxesLine(this.note.ctrl.color.getHex(), 'y')\r\n        this.obj.add(this.y.obj)\r\n        \r\n        this.z = new AxesLine(this.note.ctrl.color.getHex(), 'z')\r\n        this.obj.add(this.z.obj)\r\n\r\n        SceneManager.scene.add(this.obj)\r\n    }\r\n}","import { SceneManager } from '../../scene-manager';\r\n\r\nimport * as THREE from 'three'\r\nimport { Color } from 'src/app/color';\r\nimport { Note3D } from 'src/app/theremin/note3D';\r\n\r\nexport class DistanceLabel {\r\n\r\n    private note: Note3D\r\n\r\n    private raycaster: THREE.Raycaster\r\n\r\n    private start: THREE.Vector3\r\n    private end: THREE.Vector3\r\n\r\n    public labels: DistanceLine[] = []\r\n\r\n    public obj: THREE.Object3D\r\n\r\n    private _enabled: boolean = false\r\n\r\n    private sides: string[] = ['top', 'bottom', 'left', 'right', 'front', 'back']\r\n    private pairs: string[][] = [\r\n        ['top', 'bottom'],\r\n        ['left', 'right'],\r\n        ['front', 'back'],\r\n    ]\r\n\r\n\r\n\r\n    constructor(_note: Note3D) {\r\n\r\n        this.note = _note\r\n\r\n        this.raycaster = new THREE.Raycaster()\r\n        this.raycaster.near = .001\r\n        this.raycaster.far = 1000\r\n\r\n        this.createLabel()\r\n    }\r\n\r\n\r\n\r\n    public get enabled() { return this._enabled }\r\n    public set enabled(val: boolean) {\r\n\r\n        this._enabled = val\r\n\r\n        this.obj.visible = val        \r\n    }\r\n\r\n\r\n\r\n    public update() {\r\n\r\n        if(!this._enabled) return\r\n\r\n        this.labels.forEach(label => {\r\n\r\n            label.update()\r\n        })\r\n    }\r\n\r\n    public showHideLabel(side: string, show: boolean) {\r\n\r\n        this.labels.forEach(label => {\r\n\r\n            if(label.side == side) {\r\n\r\n                if(show) label.show()\r\n                else label.hide()\r\n            }\r\n        })\r\n    }\r\n\r\n    private createLabel() {\r\n\r\n        this.obj = new THREE.Object3D()\r\n        this.obj.name = 'distancelabel.obj'\r\n        this.obj.visible = this._enabled\r\n\r\n        let label: DistanceLine\r\n        this.sides.forEach(side => {\r\n\r\n            label = new DistanceLine(side, this.note.ctrl.position)\r\n            this.labels.push(label)\r\n            this.obj.add(label.obj)\r\n        })\r\n\r\n        SceneManager.scene.add(this.obj)\r\n    }\r\n\r\n    public getLabelBySide(side: string) {\r\n\r\n        for(let i = 0; i < this.labels.length; i++) {\r\n\r\n            if(this.labels[i].side == side)\r\n                return this.labels[i]\r\n        }\r\n    }\r\n\r\n    public getOppositeLabel(label) {\r\n\r\n        let oLabel\r\n        let index:number\r\n\r\n        this.pairs.forEach( pair => {\r\n\r\n            index = pair.indexOf(label.side)\r\n            if(index != -1) oLabel = pair[index]\r\n        })\r\n\r\n        return this.getLabelBySide(oLabel)\r\n    }\r\n}\r\n\r\n\r\nclass DistanceLine {\r\n\r\n    public side: string\r\n\r\n    public obj: THREE.Object3D\r\n    public line: THREE.Object3D\r\n    private lineGeo: THREE.BufferGeometry\r\n    private points: THREE.Vector3[] = []\r\n\r\n    public start: THREE.Vector3\r\n    public end: THREE.Vector3\r\n\r\n    private raycaster: THREE.Raycaster\r\n    private intersects: THREE.Intersection[] \r\n    private distance: number\r\n\r\n    public color: THREE.Color\r\n\r\n    public enabled: boolean \r\n\r\n    public direction: THREE.Vector3\r\n\r\n\r\n    constructor(_side: string, _start: THREE.Vector3, _end?: THREE.Vector3) {\r\n\r\n        this.side = _side\r\n\r\n        this.start = _start\r\n\r\n        this.end = _end\r\n        if(_end == undefined) this.end = new THREE.Vector3()\r\n\r\n        this.raycaster = new THREE.Raycaster()\r\n        this.raycaster.near = .001\r\n        this.raycaster.far = 1000\r\n\r\n        this.direction = new THREE.Vector3()\r\n\r\n        this.create()\r\n    }\r\n\r\n    private create() {\r\n\r\n        this.enabled = true\r\n\r\n        this.obj = new THREE.Object3D()\r\n        this.obj.name = 'label.obj'\r\n\r\n        this.lineGeo = new THREE.BufferGeometry()\r\n\r\n        this.line = new THREE.Line(this.lineGeo, new THREE.LineBasicMaterial({\r\n            color: Color.X,\r\n            transparent: true,\r\n            opacity: .4\r\n        }))\r\n        this.line.name = 'line.mesh'\r\n\r\n        this.obj.add(this.line)\r\n\r\n        this.computeDirection()\r\n    }\r\n\r\n    private raycastObjs(callback: Function) {\r\n\r\n        this.raycaster.set(this.start, this.direction)\r\n\r\n        this.intersects = this.raycaster.intersectObjects(SceneManager.environmentObjs, true)\r\n\r\n        if(this.intersects.length > 0) {\r\n\r\n            this.distance = this.intersects[0].distance\r\n\r\n            this.end.copy(this.intersects[0].point)\r\n\r\n            callback()\r\n        }\r\n        else this.intersects = null\r\n    }\r\n\r\n    private computeDirection() {\r\n\r\n        switch(this.side) {\r\n\r\n            case 'back':\r\n\r\n                return this.direction.set(0, 0, -1)\r\n\r\n            break\r\n\r\n            case 'right':\r\n\r\n                return this.direction.set(1, 0, 0)\r\n\r\n            break\r\n\r\n            case 'front': \r\n\r\n                return this.direction.set(0, 0, 1)\r\n            break\r\n\r\n            case 'left':\r\n\r\n                return this.direction.set(-1, 0, 0)\r\n            break\r\n            \r\n            case 'top': \r\n\r\n                return this.direction.set(0, 1, 0)\r\n            break\r\n\r\n            case 'bottom':\r\n\r\n                return this.direction.set(0, -1, 0)\r\n            break\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    public hide() {\r\n\r\n        this.enabled = false\r\n\r\n\r\n\r\n    }\r\n\r\n    public show() {\r\n\r\n        this.enabled = true\r\n    }\r\n\r\n    public update() { \r\n\r\n        this.raycastObjs(()=> {\r\n\r\n            this.updateLine([this.start, this.end])\r\n        })\r\n    }\r\n\r\n    public updateLine(points: THREE.Vector3[]) {\r\n\r\n        this.points = points\r\n\r\n        this.lineGeo.setFromPoints(this.points)\r\n    }\r\n}","import *  as THREE from 'three'\r\n\r\nimport { SceneManager } from '../../scene-manager'\r\nimport { Color } from 'src/app/color'\r\nimport { Note3D } from 'src/app/theremin/note3D'\r\n\r\n\r\nexport class MemoryLabel {\r\n\r\n    private note: Note3D\r\n\r\n    private storedStart: THREE.Vector3\r\n\r\n    private start: THREE.Vector3\r\n    private end: THREE.Vector3\r\n\r\n    public obj: THREE.Object3D\r\n\r\n\r\n    public line: THREE.Line\r\n    private lineGeo: THREE.BufferGeometry\r\n    public sphere: THREE.Mesh\r\n\r\n    private _enabled: boolean = false\r\n\r\n\r\n    constructor(note: Note3D) {\r\n\r\n        this.note = note\r\n\r\n        this.storedStart = new THREE.Vector3()\r\n        this.start = new THREE.Vector3()\r\n        this.end = new THREE.Vector3()\r\n\r\n        this.createLabel()\r\n    }\r\n\r\n\r\n\r\n    public get enabled() { return this._enabled }\r\n    public set enabled(val: boolean) {\r\n\r\n        this._enabled = val\r\n\r\n        this.obj.visible = val\r\n\r\n        if(val) {\r\n\r\n            this.start.copy(this.note.ctrl.position)\r\n            this.storedStart.copy(this.note.ctrl.position)\r\n        }\r\n\r\n        this.update()\r\n    }\r\n\r\n\r\n\r\n    public update() {\r\n\r\n        if(!this._enabled) return\r\n\r\n        this.sphere.position.copy(this.storedStart)\r\n\r\n        this.end.copy(this.note.ctrl.position)\r\n\r\n        this.lineGeo.setFromPoints([this.storedStart, this.end])\r\n    }\r\n\r\n    public showHideLabel(side: string, show: boolean) {\r\n\r\n    }\r\n\r\n    private createLabel() {\r\n\r\n        this.obj = new THREE.Object3D()\r\n        this.obj.name = 'memorylabel.obj'\r\n        this.obj.visible = this._enabled\r\n\r\n        this.lineGeo = new THREE.BufferGeometry()\r\n        this.line = new THREE.Line(this.lineGeo, new THREE.LineBasicMaterial({ color: Color.X, transparent: true, opacity: .2 })) \r\n        this.line.name = 'line.obj'\r\n\r\n        this.obj.add(this.line)\r\n\r\n        this.sphere = new THREE.Mesh(new THREE.SphereBufferGeometry(.1), new THREE.MeshBasicMaterial({ color: Color.X, transparent: true, opacity: .2 }))\r\n        this.sphere.name = 'sphere.obj'\r\n        this.sphere.position.copy(this.start)\r\n        \r\n        this.obj.add(this.sphere)\r\n\r\n        SceneManager.scene.add(this.obj)\r\n    }\r\n}","import { Object3D, Mesh, Group, Scene } from 'three'\r\n\r\nexport class Tools {\r\n\r\n    private static uid:number = 0\r\n    public static getUniqueID() {\r\n\r\n        Tools.uid += 1\r\n\r\n        return Tools.uid\r\n    }\r\n\r\n    public static spliceElementFromArray(element: any, array: any[]) {\r\n\r\n        let i = array.indexOf(element)\r\n\r\n        if(i >= 0 ) {\r\n\r\n            return array.splice(i, 1)\r\n        } \r\n\r\n        else return null\r\n    }\r\n\r\n    public static dispose(obj: any) {\r\n\r\n        obj.traverse(object => {\r\n            if (object !instanceof Object3D || object !instanceof Mesh || object !instanceof Group || object !instanceof Scene) return\r\n            \r\n            if(object.geometry) object.geometry.dispose()\r\n\r\n            if (object.material) {\r\n                if(object.material.length) {\r\n                    for (const material of object.material) cleanMaterial(material)\r\n                }\r\n                else cleanMaterial(object.material)\r\n            } else {\r\n                for (const material of object.material) cleanMaterial(material)\r\n            }\r\n        })\r\n\r\n        const cleanMaterial = material => {\r\n            material.dispose()\r\n\r\n            // dispose textures\r\n            for (const key of Object.keys(material)) {\r\n                const value = material[key]\r\n                if (value && typeof value === 'object' && 'minFilter' in value) {\r\n                    console.log('dispose texture!')\r\n                    value.dispose()\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}